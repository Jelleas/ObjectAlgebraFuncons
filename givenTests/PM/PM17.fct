scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('ty')), newtype('ty')),
  accum(map_empty,
  map_union(scope_nominal_coercion(variants(map1('A', tuple_type_empty)), bound_type(nameid('type', id('ty'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('A'),
        nomval(bound_value(meta('nom_tag')), variant('A', tuple_empty))), bind_value(nameid('variant_selector', id('A')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))), scope_nominal_coercion(variants(map1('B', tuple_type_empty)), bound_type(nameid('type', id('ty'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('B'),
        nomval(bound_value(meta('nom_tag')), variant('B', tuple_empty))), bind_value(nameid('variant_selector', id('B')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given)))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(instantiate_if_poly(bound_value(id('B'))), prefer_over(abs(variant_match('A',
    apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('A')))),
      given),
    only(tuple_empty))),
    abs(throw(cl_match_failure)))))),
  map_empty)))