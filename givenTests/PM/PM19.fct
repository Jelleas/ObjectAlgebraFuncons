scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('tyC')), newtype('tyC')),
  accum(map_empty,
  scope_nominal_coercion(variants(map1('C', bound_type(nameid('type', id('int'))))), bound_type(nameid('type', id('tyC'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('C'),
        close(abs(nomval(bound_value(meta('nom_tag')), variant('C', given))))), bind_value(nameid('variant_selector', id('C')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(apply(instantiate_if_poly(bound_value(id('C'))),
    7), prefer_over(abs(variant_match('C',
    apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('C')))),
      given),
    bind(id('x')))),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(instantiate_if_poly(follow_if_fwd(bound_value(id('x'))))),
  map_empty),
  accum(accum(typedef(nameid('type', id('tyA')), newtype('tyA')),
  accum(map_empty,
  scope_nominal_coercion(variants(map1('A', tuple_type_empty)), bound_type(nameid('type', id('tyA'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('A'),
        nomval(bound_value(meta('nom_tag')), variant('A', tuple_empty))), bind_value(nameid('variant_selector', id('A')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(instantiate_if_poly(bound_value(id('A'))), prefer_over(abs(variant_match('A',
    apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('A')))),
      given),
    only(tuple_empty))),
    abs(throw(cl_match_failure)))))),
  map_empty))))))