scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('t')), type_abs(list1(typevar('a')),
    newtype_poly('t', list1(typevar('a'))))),
  accum(map_empty,
  map_union(scope_nominal_coercion(type_abs(list1(typevar('a')),
    variants(map1('A', tuple_type_empty))), bound_type(nameid('type', id('t'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('A'),
        generalise(nomval_poly(bound_value(meta('nom_tag')), variant('A', tuple_empty)))), bind_value(nameid('variant_selector', id('A')),
        generalise(close(abs(nomval_select_poly(bound_value(meta('nom_tag')), given)))))))), scope_nominal_coercion(type_abs(list1(typevar('a')),
    variants(map1('B', tuple_type_empty))), bound_type(nameid('type', id('t'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('B'),
        generalise(nomval_poly(bound_value(meta('nom_tag')), variant('B', tuple_empty)))), bind_value(nameid('variant_selector', id('B')),
        generalise(close(abs(nomval_select_poly(bound_value(meta('nom_tag')), given))))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(instantiate_if_poly(bound_value(id('A'))), prefer_over(bind(id('a')),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(apply(prefer_over(prefer_over(close(patt_abs(abs(variant_match('B',
    apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('B')))),
      given),
    only(tuple_empty))),
    char('B'))),
    close(patt_abs(abs(variant_match('A',
      apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('A')))),
        given),
      only(tuple_empty))),
      char('A')))),
    abs(throw(cl_match_failure))),
    instantiate_if_poly(follow_if_fwd(bound_value(id('a')))))),
  map_empty),
  map_empty))))