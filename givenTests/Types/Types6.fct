scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('t')), type_abs(list1(typevar('a')),
    newtype_poly('t', list1(typevar('a'))))),
  accum(map_empty,
  scope_nominal_coercion(type_abs(list1(typevar('a')),
    variants(map1('C', tuple_type_empty))), bound_type(nameid('type', id('t'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('C'),
        generalise(nomval_poly(bound_value(meta('nom_tag')), variant('C', tuple_empty)))), bind_value(nameid('variant_selector', id('C')),
        generalise(close(abs(nomval_select_poly(bound_value(meta('nom_tag')), given)))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(instantiate_if_poly(bound_value(id('C'))), prefer_over(bind(id('c')),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(if_true(true,
    instantiate_if_poly(follow_if_fwd(bound_value(id('c')))),
    instantiate_if_poly(bound_value(id('C'))))),
  map_empty),
  map_empty))))