scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('ty1')), newtype('ty1')),
  accum(map_empty,
  scope_nominal_coercion(variants(map1('A', tuple_type_empty)), bound_type(nameid('type', id('ty1'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('A'),
        nomval(bound_value(meta('nom_tag')), variant('A', tuple_empty))), bind_value(nameid('variant_selector', id('A')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))))),
  accum(seq(print(instantiate_if_poly(bound_value(id('A')))),
  map_empty),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(instantiate_if_poly(bound_value(id('A'))), prefer_over(patt_at_type(bind(id('x')),
    bound_type(nameid('type', id('ty1')))),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(instantiate_if_poly(follow_if_fwd(bound_value(id('x'))))),
  map_empty),
  map_empty)))))