scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('either')), type_abs(list_prefix(typevar('a'), list1(typevar('b'))),
    newtype_poly('either', list_prefix(typevar('a'), list1(typevar('b')))))),
  accum(map_empty,
  map_union(scope_nominal_coercion(type_abs(list_prefix(typevar('a'), list1(typevar('b'))),
    variants(map1('Left', typevar('a')))), bound_type(nameid('type', id('either'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('Left'),
        generalise(close(abs(nomval_poly(bound_value(meta('nom_tag')), variant('Left', given)))))), bind_value(nameid('variant_selector', id('Left')),
        generalise(close(abs(nomval_select_poly(bound_value(meta('nom_tag')), given)))))))), scope_nominal_coercion(type_abs(list_prefix(typevar('a'), list1(typevar('b'))),
    variants(map1('Right', typevar('b')))), bound_type(nameid('type', id('either'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('Right'),
        generalise(close(abs(nomval_poly(bound_value(meta('nom_tag')), variant('Right', given)))))), bind_value(nameid('variant_selector', id('Right')),
        generalise(close(abs(nomval_select_poly(bound_value(meta('nom_tag')), given))))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(apply(instantiate_if_poly(bound_value(id('Left'))),
    7), prefer_over(patt_at_type(bind(id('v')),
    instantiate_type(bound_type(nameid('type', id('either'))), list_prefix(bound_type(nameid('type', id('int'))), list1(bound_type(nameid('type', id('bool'))))))),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(instantiate_if_poly(follow_if_fwd(bound_value(id('v'))))),
  map_empty),
  map_empty))))