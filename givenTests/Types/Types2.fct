scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('t')), type_abs(list1(typevar('a')),
    newtype_poly('t', list1(typevar('a'))))),
  accum(map_empty,
  scope_nominal_coercion(type_abs(list1(typevar('a')),
    variants(map1('C', tuple_type_empty))), bound_type(nameid('type', id('t'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('C'),
        generalise(nomval_poly(bound_value(meta('nom_tag')), variant('C', tuple_empty)))), bind_value(nameid('variant_selector', id('C')),
        generalise(close(abs(nomval_select_poly(bound_value(meta('nom_tag')), given)))))))))),
  accum(seq(print(typed(instantiate_if_poly(bound_value(id('C'))),
    instantiate_type(bound_type(nameid('type', id('t'))), list1(bound_type(nameid('type', id('int'))))))),
  map_empty),
  map_empty)))