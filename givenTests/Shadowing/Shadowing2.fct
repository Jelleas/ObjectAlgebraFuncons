scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('t1')), newtype('t1')),
  accum(map_empty,
  scope_nominal_coercion(variants(map1('A', bound_type(nameid('type', id('int'))))), bound_type(nameid('type', id('t1'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('A'),
        close(abs(nomval(bound_value(meta('nom_tag')), variant('A', given))))), bind_value(nameid('variant_selector', id('A')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))))),
  accum(accum(typedef(nameid('type', id('t2')), newtype('t2')),
  accum(map_empty,
  scope_nominal_coercion(variants(map1('A', bound_type(nameid('type', id('bool'))))), bound_type(nameid('type', id('t2'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('A'),
        close(abs(nomval(bound_value(meta('nom_tag')), variant('A', given))))), bind_value(nameid('variant_selector', id('A')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(apply(instantiate_if_poly(bound_value(id('A'))),
    true), prefer_over(bind(id('c')),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(apply(prefer_over(close(patt_abs(abs(variant_match('A',
    apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('A')))),
      given),
    bind(id('b')))),
    instantiate_if_poly(follow_if_fwd(bound_value(id('b')))))),
    abs(throw(cl_match_failure))),
    instantiate_if_poly(follow_if_fwd(bound_value(id('c')))))),
  map_empty),
  map_empty)))))