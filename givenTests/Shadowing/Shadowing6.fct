scope(accum(cl_base,
cl_library),
  accum(scope_nominal_coercion(variants(map1('E', bound_type(nameid('type', id('bool'))))), bound_type(nameid('builtin', id('exn'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('E'),
        close(abs(nomval(bound_value(meta('nom_tag')), variant('E', given))))), bind_value(nameid('variant_selector', id('E')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(apply(instantiate_if_poly(bound_value(id('E'))),
    true), prefer_over(bind(id('x')),
    abs(throw(cl_match_failure)))))),
  accum(scope_nominal_coercion(variants(map1('E', bound_type(nameid('type', id('int'))))), bound_type(nameid('builtin', id('exn'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('E'),
        close(abs(nomval(bound_value(meta('nom_tag')), variant('E', given))))), bind_value(nameid('variant_selector', id('E')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))),
  accum(seq(print(apply(prefer_over(prefer_over(close(patt_abs(abs(variant_match('E',
    apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('E')))),
      given),
    bind(id('i')))),
    apply(apply(instantiate_if_poly(follow_if_fwd(bound_value(id('prefix +')))),
      instantiate_if_poly(follow_if_fwd(bound_value(id('i'))))),
      1))),
    close(patt_abs(any,
      99))),
    abs(throw(cl_match_failure))),
    instantiate_if_poly(follow_if_fwd(bound_value(id('x')))))),
  map_empty),
  map_empty)))))