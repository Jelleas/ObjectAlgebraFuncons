scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('ty')), newtype('ty')),
  accum(map_empty,
  scope_nominal_coercion(records(map1('x', bound_type(nameid('type', id('int'))))), bound_type(nameid('type', id('ty'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(match(close(abs(nomval(bound_value(meta('nom_tag')), apply(abs(record1('x', record_select(given, 'x'))),
        typed(given,
          records(map1('x', bound_type(nameid('type', id('int')))))))))), bind(nameid('label', id('x')))), match(close(abs(nomval_select(bound_value(meta('nom_tag')), given))), bind(nameid('label_selector', id('x'))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(char('X'), prefer_over(bind(id('x')),
    abs(throw(cl_match_failure)))))),
  accum(instantiate_poly_decl_if_true(not(false), generalise_decl(match(apply(instantiate_if_poly(bound_value(nameid('label', id('x')))),
    record1('x', 7)), prefer_over(bind(id('r')),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(instantiate_if_poly(follow_if_fwd(bound_value(id('x'))))),
  map_empty),
  accum(seq(print(assigned_value_if_var(record_select(apply(instantiate_if_poly(bound_value(nameid('label_selector', id('x')))),
    instantiate_if_poly(follow_if_fwd(bound_value(id('r'))))), 'x'))),
  map_empty),
  map_empty))))))