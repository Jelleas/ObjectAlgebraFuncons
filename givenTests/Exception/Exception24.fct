scope(accum(cl_base,
cl_library),
  accum(scope_nominal_coercion(variants(map1('E', tuple_type_empty)), bound_type(nameid('builtin', id('exn'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(bind_value(id('E'),
        nomval(bound_value(meta('nom_tag')), variant('E', tuple_empty))), bind_value(nameid('variant_selector', id('E')),
        close(abs(nomval_select(bound_value(meta('nom_tag')), given))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(prefer_over(close(patt_abs(only(0),
    char('X'))),
    abs(throw(cl_match_failure))), prefer_over(bind(id('f')),
    abs(throw(cl_match_failure)))))),
  accum(seq(print(catch_else_rethrow(
    apply(instantiate_if_poly(follow_if_fwd(bound_value(id('f')))),
      1),
    restrict_domain(prefer_over(close(patt_abs(abs(variant_match('E',
      apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('E')))),
        given),
      only(tuple_empty))),
      char('Z'))),
      close(patt_abs(abs(variant_match('Match_failure',
        apply(instantiate_if_poly(bound_value(nameid('variant_selector', id('Match_failure')))),
          given),
        any)),
        char('O')))),
      bound_type(nameid('builtin', id('exn')))))),
  map_empty),
  map_empty))))