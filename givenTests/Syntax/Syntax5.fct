scope(accum(cl_base,
cl_library),
  accum(accum(typedef(nameid('type', id('r')), newtype('r')),
  accum(map_empty,
  scope_nominal_coercion(records_union(records(map1('x', bound_type(nameid('type', id('int'))))),
    records_union(records(map1('y', bound_type(nameid('type', id('int'))))),
      records(map1('z', bound_type(nameid('type', id('int'))))))), bound_type(nameid('type', id('r'))),
    patt_abs(bind(meta('nom_tag')),
      map_union(match(close(abs(nomval(bound_value(meta('nom_tag')), apply(abs(record_union(apply(abs(record1('x', record_select(given, 'x'))),
        given),
        apply(abs(record_union(apply(abs(record1('y', record_select(given, 'y'))),
          given),
          apply(abs(record1('z', record_select(given, 'z'))),
            given))),
          given))),
        typed(given,
          records_union(records(map1('x', bound_type(nameid('type', id('int'))))),
            records_union(records(map1('y', bound_type(nameid('type', id('int'))))),
              records(map1('z', bound_type(nameid('type', id('int')))))))))))), patt_union(bind(nameid('label', id('x'))),
        patt_union(bind(nameid('label', id('y'))),
          bind(nameid('label', id('z')))))), match(close(abs(nomval_select(bound_value(meta('nom_tag')), given))), patt_union(bind(nameid('label_selector', id('x'))),
        patt_union(bind(nameid('label_selector', id('y'))),
          bind(nameid('label_selector', id('z'))))))))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(prefer_over(close(patt_abs(abs(record_match_loose(apply(instantiate_if_poly(bound_value(nameid('label_selector', id('x')))),
    given), map1('x', abs(match(assigned_value_if_var(given), bind(id('a'))))))),
    instantiate_if_poly(follow_if_fwd(bound_value(id('a')))))),
    abs(throw(cl_match_failure))), prefer_over(bind(id('f1')),
    abs(throw(cl_match_failure)))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(prefer_over(close(patt_abs(abs(record_match_loose(apply(instantiate_if_poly(typed(bound_value(nameid('label_selector', id('y'))),
    type_of(bound_value(nameid('label_selector', id('z')))))),
    given), map_union(map1('y', abs(match(assigned_value_if_var(given), bind(id('b'))))), map1('z', abs(match(assigned_value_if_var(given), bind(id('c')))))))),
    tuple_prefix(instantiate_if_poly(follow_if_fwd(bound_value(id('b')))),
      tuple_prefix(instantiate_if_poly(follow_if_fwd(bound_value(id('c')))),
        tuple_empty)))),
    abs(throw(cl_match_failure))), prefer_over(bind(id('f2')),
    abs(throw(cl_match_failure)))))),
  accum(instantiate_poly_decl_if_true(not(true), generalise_decl(match(prefer_over(close(patt_abs(abs(record_match_loose(apply(instantiate_if_poly(typed(bound_value(nameid('label_selector', id('x'))),
    type_of(typed(bound_value(nameid('label_selector', id('y'))),
      type_of(bound_value(nameid('label_selector', id('z')))))))),
    given), map_union(map1('x', abs(match(assigned_value_if_var(given), only(1)))), map_union(map1('y', abs(match(assigned_value_if_var(given), only(2)))), map1('z', abs(match(assigned_value_if_var(given), only(3)))))))),
    "okay")),
    abs(throw(cl_match_failure))), prefer_over(bind(id('f3')),
    abs(throw(cl_match_failure)))))),
  map_empty)))))