// Generated from  by ANTLR 4.2.2

package camllight.parser;
import static camllight.parser.Tokens.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__64=1, T__63=2, T__62=3, T__61=4, T__60=5, T__59=6, T__58=7, T__57=8, 
		T__56=9, T__55=10, T__54=11, T__53=12, T__52=13, T__51=14, T__50=15, T__49=16, 
		T__48=17, T__47=18, T__46=19, T__45=20, T__44=21, T__43=22, T__42=23, 
		T__41=24, T__40=25, T__39=26, T__38=27, T__37=28, T__36=29, T__35=30, 
		T__34=31, T__33=32, T__32=33, T__31=34, T__30=35, T__29=36, T__28=37, 
		T__27=38, T__26=39, T__25=40, T__24=41, T__23=42, T__22=43, T__21=44, 
		T__20=45, T__19=46, T__18=47, T__17=48, T__16=49, T__15=50, T__14=51, 
		T__13=52, T__12=53, T__11=54, T__10=55, T__9=56, T__8=57, T__7=58, T__6=59, 
		T__5=60, T__4=61, T__3=62, T__2=63, T__1=64, T__0=65, CHARTOKEN=66, WS=67, 
		INTTOKEN=68, NULLTOKEN=69, STRINGTOKEN=70, EMPTYLISTTOKEN=71, EMPTYARRAYTOKEN=72, 
		WILDCARDTOKEN=73, FLOATTOKEN=74, BOOLTOKEN=75, IDTOKEN=76, CONSTRTOKEN=77;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'fun'", "'while'", "'{'", "'&&'", "'::'", "'='", "'for'", "'do'", "'('", 
		"'rec'", "','", "'<-'", "'done'", "'mod'", "'>='", "'<'", "';;'", "']'", 
		"'*.'", "'type'", "'|]'", "'let'", "'match'", "'function'", "'downto'", 
		"'then'", "'+'", "'/'", "'as'", "'of'", "'.('", "'||'", "'/.'", "';'", 
		"'}'", "'if'", "'try'", "'<='", "'[|'", "'&'", "'print'", "'''", "'*'", 
		"'.'", "'exception'", "'->'", "'to'", "'mutable'", "':'", "'['", "'=='", 
		"'|'", "'with'", "'>'", "'+.'", "'or'", "'-.'", "'else'", "'begin'", "'in'", 
		"'end'", "')'", "'and'", "'not'", "'-'", "CHARTOKEN", "WS", "INTTOKEN", 
		"NULLTOKEN", "STRINGTOKEN", "EMPTYLISTTOKEN", "EMPTYARRAYTOKEN", "'_'", 
		"FLOATTOKEN", "BOOLTOKEN", "IDTOKEN", "CONSTRTOKEN"
	};
	public static final String[] ruleNames = {
		"T__64", "T__63", "T__62", "T__61", "T__60", "T__59", "T__58", "T__57", 
		"T__56", "T__55", "T__54", "T__53", "T__52", "T__51", "T__50", "T__49", 
		"T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42", "T__41", 
		"T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", "T__33", 
		"T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", "T__25", 
		"T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", 
		"T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", 
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"CHARTOKEN", "WS", "INTTOKEN", "NULLTOKEN", "STRINGTOKEN", "EMPTYLISTTOKEN", 
		"EMPTYARRAYTOKEN", "WILDCARDTOKEN", "FLOATTOKEN", "BOOLTOKEN", "IDTOKEN", 
		"CONSTRTOKEN"
	};


	public CLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return ""; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2O\u01f2\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3"+
		"\3\3\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16"+
		"\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23"+
		"\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\27\3\27"+
		"\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33"+
		"\3\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3"+
		"!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3(\3(\3"+
		"(\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3.\3.\3.\3.\3.\3"+
		".\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3\61\3"+
		"\62\3\62\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3"+
		"\67\3\67\38\38\38\39\39\39\3:\3:\3:\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3"+
		"=\3=\3=\3>\3>\3>\3>\3?\3?\3@\3@\3@\3@\3A\3A\3A\3A\3B\3B\3C\3C\3C\3C\3"+
		"C\3C\3C\5C\u0189\nC\7C\u018b\nC\fC\16C\u018e\13C\3C\3C\3D\6D\u0193\nD"+
		"\rD\16D\u0194\3D\3D\3E\6E\u019a\nE\rE\16E\u019b\3F\3F\7F\u01a0\nF\fF\16"+
		"F\u01a3\13F\3F\3F\3G\3G\3G\3G\3G\3G\3G\5G\u01ae\nG\7G\u01b0\nG\fG\16G"+
		"\u01b3\13G\3G\3G\3H\3H\7H\u01b9\nH\fH\16H\u01bc\13H\3H\3H\3I\3I\3I\3I"+
		"\7I\u01c4\nI\fI\16I\u01c7\13I\3I\3I\3I\3J\3J\3K\6K\u01cf\nK\rK\16K\u01d0"+
		"\3K\3K\7K\u01d5\nK\fK\16K\u01d8\13K\3L\3L\3L\3L\3L\3L\3L\3L\3L\5L\u01e3"+
		"\nL\3M\3M\7M\u01e7\nM\fM\16M\u01ea\13M\3N\3N\7N\u01ee\nN\fN\16N\u01f1"+
		"\13N\2\2O\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33"+
		"\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67"+
		"\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65"+
		"i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081B\u0083C\u0085D\u0087E\u0089F\u008b"+
		"G\u008dH\u008fI\u0091J\u0093K\u0095L\u0097M\u0099N\u009bO\3\2\13\4\2^"+
		"^bb\b\2^^bbddppttvv\3\2\62;\3\2\"\"\4\2$$^^\b\2$$^^ddppttvv\4\2aac|\6"+
		"\2\62;C\\aac|\3\2C\\\u0201\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67"+
		"\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2"+
		"\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2"+
		"\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]"+
		"\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2"+
		"\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2"+
		"\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2"+
		"\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2"+
		"\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093"+
		"\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2"+
		"\2\3\u009d\3\2\2\2\5\u00a1\3\2\2\2\7\u00a7\3\2\2\2\t\u00a9\3\2\2\2\13"+
		"\u00ac\3\2\2\2\r\u00af\3\2\2\2\17\u00b1\3\2\2\2\21\u00b5\3\2\2\2\23\u00b8"+
		"\3\2\2\2\25\u00ba\3\2\2\2\27\u00be\3\2\2\2\31\u00c0\3\2\2\2\33\u00c3\3"+
		"\2\2\2\35\u00c8\3\2\2\2\37\u00cc\3\2\2\2!\u00cf\3\2\2\2#\u00d1\3\2\2\2"+
		"%\u00d4\3\2\2\2\'\u00d6\3\2\2\2)\u00d9\3\2\2\2+\u00de\3\2\2\2-\u00e1\3"+
		"\2\2\2/\u00e5\3\2\2\2\61\u00eb\3\2\2\2\63\u00f4\3\2\2\2\65\u00fb\3\2\2"+
		"\2\67\u0100\3\2\2\29\u0102\3\2\2\2;\u0104\3\2\2\2=\u0107\3\2\2\2?\u010a"+
		"\3\2\2\2A\u010d\3\2\2\2C\u0110\3\2\2\2E\u0113\3\2\2\2G\u0115\3\2\2\2I"+
		"\u0117\3\2\2\2K\u011a\3\2\2\2M\u011e\3\2\2\2O\u0121\3\2\2\2Q\u0124\3\2"+
		"\2\2S\u0126\3\2\2\2U\u012c\3\2\2\2W\u012e\3\2\2\2Y\u0130\3\2\2\2[\u0132"+
		"\3\2\2\2]\u013c\3\2\2\2_\u013f\3\2\2\2a\u0142\3\2\2\2c\u014a\3\2\2\2e"+
		"\u014c\3\2\2\2g\u014e\3\2\2\2i\u0151\3\2\2\2k\u0153\3\2\2\2m\u0158\3\2"+
		"\2\2o\u015a\3\2\2\2q\u015d\3\2\2\2s\u0160\3\2\2\2u\u0163\3\2\2\2w\u0168"+
		"\3\2\2\2y\u016e\3\2\2\2{\u0171\3\2\2\2}\u0175\3\2\2\2\177\u0177\3\2\2"+
		"\2\u0081\u017b\3\2\2\2\u0083\u017f\3\2\2\2\u0085\u0181\3\2\2\2\u0087\u0192"+
		"\3\2\2\2\u0089\u0199\3\2\2\2\u008b\u019d\3\2\2\2\u008d\u01a6\3\2\2\2\u008f"+
		"\u01b6\3\2\2\2\u0091\u01bf\3\2\2\2\u0093\u01cb\3\2\2\2\u0095\u01ce\3\2"+
		"\2\2\u0097\u01e2\3\2\2\2\u0099\u01e4\3\2\2\2\u009b\u01eb\3\2\2\2\u009d"+
		"\u009e\7h\2\2\u009e\u009f\7w\2\2\u009f\u00a0\7p\2\2\u00a0\4\3\2\2\2\u00a1"+
		"\u00a2\7y\2\2\u00a2\u00a3\7j\2\2\u00a3\u00a4\7k\2\2\u00a4\u00a5\7n\2\2"+
		"\u00a5\u00a6\7g\2\2\u00a6\6\3\2\2\2\u00a7\u00a8\7}\2\2\u00a8\b\3\2\2\2"+
		"\u00a9\u00aa\7(\2\2\u00aa\u00ab\7(\2\2\u00ab\n\3\2\2\2\u00ac\u00ad\7<"+
		"\2\2\u00ad\u00ae\7<\2\2\u00ae\f\3\2\2\2\u00af\u00b0\7?\2\2\u00b0\16\3"+
		"\2\2\2\u00b1\u00b2\7h\2\2\u00b2\u00b3\7q\2\2\u00b3\u00b4\7t\2\2\u00b4"+
		"\20\3\2\2\2\u00b5\u00b6\7f\2\2\u00b6\u00b7\7q\2\2\u00b7\22\3\2\2\2\u00b8"+
		"\u00b9\7*\2\2\u00b9\24\3\2\2\2\u00ba\u00bb\7t\2\2\u00bb\u00bc\7g\2\2\u00bc"+
		"\u00bd\7e\2\2\u00bd\26\3\2\2\2\u00be\u00bf\7.\2\2\u00bf\30\3\2\2\2\u00c0"+
		"\u00c1\7>\2\2\u00c1\u00c2\7/\2\2\u00c2\32\3\2\2\2\u00c3\u00c4\7f\2\2\u00c4"+
		"\u00c5\7q\2\2\u00c5\u00c6\7p\2\2\u00c6\u00c7\7g\2\2\u00c7\34\3\2\2\2\u00c8"+
		"\u00c9\7o\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cb\7f\2\2\u00cb\36\3\2\2\2\u00cc"+
		"\u00cd\7@\2\2\u00cd\u00ce\7?\2\2\u00ce \3\2\2\2\u00cf\u00d0\7>\2\2\u00d0"+
		"\"\3\2\2\2\u00d1\u00d2\7=\2\2\u00d2\u00d3\7=\2\2\u00d3$\3\2\2\2\u00d4"+
		"\u00d5\7_\2\2\u00d5&\3\2\2\2\u00d6\u00d7\7,\2\2\u00d7\u00d8\7\60\2\2\u00d8"+
		"(\3\2\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7{\2\2\u00db\u00dc\7r\2\2\u00dc"+
		"\u00dd\7g\2\2\u00dd*\3\2\2\2\u00de\u00df\7~\2\2\u00df\u00e0\7_\2\2\u00e0"+
		",\3\2\2\2\u00e1\u00e2\7n\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7v\2\2\u00e4"+
		".\3\2\2\2\u00e5\u00e6\7o\2\2\u00e6\u00e7\7c\2\2\u00e7\u00e8\7v\2\2\u00e8"+
		"\u00e9\7e\2\2\u00e9\u00ea\7j\2\2\u00ea\60\3\2\2\2\u00eb\u00ec\7h\2\2\u00ec"+
		"\u00ed\7w\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7e\2\2\u00ef\u00f0\7v\2\2"+
		"\u00f0\u00f1\7k\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3\7p\2\2\u00f3\62\3\2"+
		"\2\2\u00f4\u00f5\7f\2\2\u00f5\u00f6\7q\2\2\u00f6\u00f7\7y\2\2\u00f7\u00f8"+
		"\7p\2\2\u00f8\u00f9\7v\2\2\u00f9\u00fa\7q\2\2\u00fa\64\3\2\2\2\u00fb\u00fc"+
		"\7v\2\2\u00fc\u00fd\7j\2\2\u00fd\u00fe\7g\2\2\u00fe\u00ff\7p\2\2\u00ff"+
		"\66\3\2\2\2\u0100\u0101\7-\2\2\u01018\3\2\2\2\u0102\u0103\7\61\2\2\u0103"+
		":\3\2\2\2\u0104\u0105\7c\2\2\u0105\u0106\7u\2\2\u0106<\3\2\2\2\u0107\u0108"+
		"\7q\2\2\u0108\u0109\7h\2\2\u0109>\3\2\2\2\u010a\u010b\7\60\2\2\u010b\u010c"+
		"\7*\2\2\u010c@\3\2\2\2\u010d\u010e\7~\2\2\u010e\u010f\7~\2\2\u010fB\3"+
		"\2\2\2\u0110\u0111\7\61\2\2\u0111\u0112\7\60\2\2\u0112D\3\2\2\2\u0113"+
		"\u0114\7=\2\2\u0114F\3\2\2\2\u0115\u0116\7\177\2\2\u0116H\3\2\2\2\u0117"+
		"\u0118\7k\2\2\u0118\u0119\7h\2\2\u0119J\3\2\2\2\u011a\u011b\7v\2\2\u011b"+
		"\u011c\7t\2\2\u011c\u011d\7{\2\2\u011dL\3\2\2\2\u011e\u011f\7>\2\2\u011f"+
		"\u0120\7?\2\2\u0120N\3\2\2\2\u0121\u0122\7]\2\2\u0122\u0123\7~\2\2\u0123"+
		"P\3\2\2\2\u0124\u0125\7(\2\2\u0125R\3\2\2\2\u0126\u0127\7r\2\2\u0127\u0128"+
		"\7t\2\2\u0128\u0129\7k\2\2\u0129\u012a\7p\2\2\u012a\u012b\7v\2\2\u012b"+
		"T\3\2\2\2\u012c\u012d\7)\2\2\u012dV\3\2\2\2\u012e\u012f\7,\2\2\u012fX"+
		"\3\2\2\2\u0130\u0131\7\60\2\2\u0131Z\3\2\2\2\u0132\u0133\7g\2\2\u0133"+
		"\u0134\7z\2\2\u0134\u0135\7e\2\2\u0135\u0136\7g\2\2\u0136\u0137\7r\2\2"+
		"\u0137\u0138\7v\2\2\u0138\u0139\7k\2\2\u0139\u013a\7q\2\2\u013a\u013b"+
		"\7p\2\2\u013b\\\3\2\2\2\u013c\u013d\7/\2\2\u013d\u013e\7@\2\2\u013e^\3"+
		"\2\2\2\u013f\u0140\7v\2\2\u0140\u0141\7q\2\2\u0141`\3\2\2\2\u0142\u0143"+
		"\7o\2\2\u0143\u0144\7w\2\2\u0144\u0145\7v\2\2\u0145\u0146\7c\2\2\u0146"+
		"\u0147\7d\2\2\u0147\u0148\7n\2\2\u0148\u0149\7g\2\2\u0149b\3\2\2\2\u014a"+
		"\u014b\7<\2\2\u014bd\3\2\2\2\u014c\u014d\7]\2\2\u014df\3\2\2\2\u014e\u014f"+
		"\7?\2\2\u014f\u0150\7?\2\2\u0150h\3\2\2\2\u0151\u0152\7~\2\2\u0152j\3"+
		"\2\2\2\u0153\u0154\7y\2\2\u0154\u0155\7k\2\2\u0155\u0156\7v\2\2\u0156"+
		"\u0157\7j\2\2\u0157l\3\2\2\2\u0158\u0159\7@\2\2\u0159n\3\2\2\2\u015a\u015b"+
		"\7-\2\2\u015b\u015c\7\60\2\2\u015cp\3\2\2\2\u015d\u015e\7q\2\2\u015e\u015f"+
		"\7t\2\2\u015fr\3\2\2\2\u0160\u0161\7/\2\2\u0161\u0162\7\60\2\2\u0162t"+
		"\3\2\2\2\u0163\u0164\7g\2\2\u0164\u0165\7n\2\2\u0165\u0166\7u\2\2\u0166"+
		"\u0167\7g\2\2\u0167v\3\2\2\2\u0168\u0169\7d\2\2\u0169\u016a\7g\2\2\u016a"+
		"\u016b\7i\2\2\u016b\u016c\7k\2\2\u016c\u016d\7p\2\2\u016dx\3\2\2\2\u016e"+
		"\u016f\7k\2\2\u016f\u0170\7p\2\2\u0170z\3\2\2\2\u0171\u0172\7g\2\2\u0172"+
		"\u0173\7p\2\2\u0173\u0174\7f\2\2\u0174|\3\2\2\2\u0175\u0176\7+\2\2\u0176"+
		"~\3\2\2\2\u0177\u0178\7c\2\2\u0178\u0179\7p\2\2\u0179\u017a\7f\2\2\u017a"+
		"\u0080\3\2\2\2\u017b\u017c\7p\2\2\u017c\u017d\7q\2\2\u017d\u017e\7v\2"+
		"\2\u017e\u0082\3\2\2\2\u017f\u0180\7/\2\2\u0180\u0084\3\2\2\2\u0181\u018c"+
		"\7b\2\2\u0182\u018b\n\2\2\2\u0183\u0188\7^\2\2\u0184\u0189\t\3\2\2\u0185"+
		"\u0186\t\4\2\2\u0186\u0187\t\4\2\2\u0187\u0189\t\4\2\2\u0188\u0184\3\2"+
		"\2\2\u0188\u0185\3\2\2\2\u0189\u018b\3\2\2\2\u018a\u0182\3\2\2\2\u018a"+
		"\u0183\3\2\2\2\u018b\u018e\3\2\2\2\u018c\u018a\3\2\2\2\u018c\u018d\3\2"+
		"\2\2\u018d\u018f\3\2\2\2\u018e\u018c\3\2\2\2\u018f\u0190\7b\2\2\u0190"+
		"\u0086\3\2\2\2\u0191\u0193\t\5\2\2\u0192\u0191\3\2\2\2\u0193\u0194\3\2"+
		"\2\2\u0194\u0192\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0196\3\2\2\2\u0196"+
		"\u0197\bD\2\2\u0197\u0088\3\2\2\2\u0198\u019a\t\4\2\2\u0199\u0198\3\2"+
		"\2\2\u019a\u019b\3\2\2\2\u019b\u0199\3\2\2\2\u019b\u019c\3\2\2\2\u019c"+
		"\u008a\3\2\2\2\u019d\u01a1\7*\2\2\u019e\u01a0\t\5\2\2\u019f\u019e\3\2"+
		"\2\2\u01a0\u01a3\3\2\2\2\u01a1\u019f\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a2"+
		"\u01a4\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a4\u01a5\7+\2\2\u01a5\u008c\3\2"+
		"\2\2\u01a6\u01b1\7$\2\2\u01a7\u01b0\n\6\2\2\u01a8\u01ad\7^\2\2\u01a9\u01ae"+
		"\t\7\2\2\u01aa\u01ab\t\4\2\2\u01ab\u01ac\t\4\2\2\u01ac\u01ae\t\4\2\2\u01ad"+
		"\u01a9\3\2\2\2\u01ad\u01aa\3\2\2\2\u01ae\u01b0\3\2\2\2\u01af\u01a7\3\2"+
		"\2\2\u01af\u01a8\3\2\2\2\u01b0\u01b3\3\2\2\2\u01b1\u01af\3\2\2\2\u01b1"+
		"\u01b2\3\2\2\2\u01b2\u01b4\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4\u01b5\7$"+
		"\2\2\u01b5\u008e\3\2\2\2\u01b6\u01ba\7]\2\2\u01b7\u01b9\t\5\2\2\u01b8"+
		"\u01b7\3\2\2\2\u01b9\u01bc\3\2\2\2\u01ba\u01b8\3\2\2\2\u01ba\u01bb\3\2"+
		"\2\2\u01bb\u01bd\3\2\2\2\u01bc\u01ba\3\2\2\2\u01bd\u01be\7_\2\2\u01be"+
		"\u0090\3\2\2\2\u01bf\u01c0\7]\2\2\u01c0\u01c1\7~\2\2\u01c1\u01c5\3\2\2"+
		"\2\u01c2\u01c4\t\5\2\2\u01c3\u01c2\3\2\2\2\u01c4\u01c7\3\2\2\2\u01c5\u01c3"+
		"\3\2\2\2\u01c5\u01c6\3\2\2\2\u01c6\u01c8\3\2\2\2\u01c7\u01c5\3\2\2\2\u01c8"+
		"\u01c9\7~\2\2\u01c9\u01ca\7_\2\2\u01ca\u0092\3\2\2\2\u01cb\u01cc\7a\2"+
		"\2\u01cc\u0094\3\2\2\2\u01cd\u01cf\t\4\2\2\u01ce\u01cd\3\2\2\2\u01cf\u01d0"+
		"\3\2\2\2\u01d0\u01ce\3\2\2\2\u01d0\u01d1\3\2\2\2\u01d1\u01d2\3\2\2\2\u01d2"+
		"\u01d6\7\60\2\2\u01d3\u01d5\t\4\2\2\u01d4\u01d3\3\2\2\2\u01d5\u01d8\3"+
		"\2\2\2\u01d6\u01d4\3\2\2\2\u01d6\u01d7\3\2\2\2\u01d7\u0096\3\2\2\2\u01d8"+
		"\u01d6\3\2\2\2\u01d9\u01da\7h\2\2\u01da\u01db\7c\2\2\u01db\u01dc\7n\2"+
		"\2\u01dc\u01dd\7u\2\2\u01dd\u01e3\7g\2\2\u01de\u01df\7v\2\2\u01df\u01e0"+
		"\7t\2\2\u01e0\u01e1\7w\2\2\u01e1\u01e3\7g\2\2\u01e2\u01d9\3\2\2\2\u01e2"+
		"\u01de\3\2\2\2\u01e3\u0098\3\2\2\2\u01e4\u01e8\t\b\2\2\u01e5\u01e7\t\t"+
		"\2\2\u01e6\u01e5\3\2\2\2\u01e7\u01ea\3\2\2\2\u01e8\u01e6\3\2\2\2\u01e8"+
		"\u01e9\3\2\2\2\u01e9\u009a\3\2\2\2\u01ea\u01e8\3\2\2\2\u01eb\u01ef\t\n"+
		"\2\2\u01ec\u01ee\t\t\2\2\u01ed\u01ec\3\2\2\2\u01ee\u01f1\3\2\2\2\u01ef"+
		"\u01ed\3\2\2\2\u01ef\u01f0\3\2\2\2\u01f0\u009c\3\2\2\2\u01f1\u01ef\3\2"+
		"\2\2\23\2\u0188\u018a\u018c\u0194\u019b\u01a1\u01ad\u01af\u01b1\u01ba"+
		"\u01c5\u01d0\u01d6\u01e2\u01e8\u01ef\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}