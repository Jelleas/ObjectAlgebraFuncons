// Generated from  by ANTLR 4.2.2

package camllight.parser;
import static camllight.parser.Tokens.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__56=1, T__55=2, T__54=3, T__53=4, T__52=5, T__51=6, T__50=7, T__49=8, 
		T__48=9, T__47=10, T__46=11, T__45=12, T__44=13, T__43=14, T__42=15, T__41=16, 
		T__40=17, T__39=18, T__38=19, T__37=20, T__36=21, T__35=22, T__34=23, 
		T__33=24, T__32=25, T__31=26, T__30=27, T__29=28, T__28=29, T__27=30, 
		T__26=31, T__25=32, T__24=33, T__23=34, T__22=35, T__21=36, T__20=37, 
		T__19=38, T__18=39, T__17=40, T__16=41, T__15=42, T__14=43, T__13=44, 
		T__12=45, T__11=46, T__10=47, T__9=48, T__8=49, T__7=50, T__6=51, T__5=52, 
		T__4=53, T__3=54, T__2=55, T__1=56, T__0=57, WS=58, INTTOKEN=59, NULLTOKEN=60, 
		EMPTYARRAYTOKEN=61, EMPTYLISTTOKEN=62, WILDCARDTOKEN=63, FLOATTOKEN=64, 
		BOOLTOKEN=65, IDTOKEN=66, CONSTRTOKEN=67;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'fun'", "'while'", "'&&'", "'::'", "'='", "'for'", "'do'", "'('", "'rec'", 
		"','", "'<-'", "'done'", "'mod'", "'>='", "'<'", "';;'", "']'", "'*.'", 
		"'|]'", "'let'", "'match'", "'function'", "'downto'", "'then'", "'+'", 
		"'/'", "'as'", "'of'", "'.('", "'||'", "'/.'", "';'", "'if'", "'<='", 
		"'[|'", "'&'", "'print'", "'''", "'*'", "'->'", "'to'", "':'", "'['", 
		"'|'", "'with'", "'>'", "'+.'", "'or'", "'-.'", "'else'", "'begin'", "'in'", 
		"'end'", "')'", "'and'", "'not'", "'-'", "WS", "INTTOKEN", "NULLTOKEN", 
		"EMPTYARRAYTOKEN", "EMPTYLISTTOKEN", "'_'", "FLOATTOKEN", "BOOLTOKEN", 
		"IDTOKEN", "CONSTRTOKEN"
	};
	public static final String[] ruleNames = {
		"T__56", "T__55", "T__54", "T__53", "T__52", "T__51", "T__50", "T__49", 
		"T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42", "T__41", 
		"T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", "T__33", 
		"T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", "T__25", 
		"T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", 
		"T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", 
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"WS", "INTTOKEN", "NULLTOKEN", "EMPTYARRAYTOKEN", "EMPTYLISTTOKEN", "WILDCARDTOKEN", 
		"FLOATTOKEN", "BOOLTOKEN", "IDTOKEN", "CONSTRTOKEN"
	};


	public CLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return ""; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2E\u019a\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\3\2\3\2\3\2\3\2\3\3\3\3\3\3"+
		"\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3"+
		"\b\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3"+
		"\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3"+
		"\23\3\23\3\23\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3"+
		"\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3"+
		"\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3"+
		"\34\3\34\3\35\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3"+
		"\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3(\3(\3)"+
		"\3)\3)\3*\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3.\3.\3.\3/\3/\3\60\3\60\3\60"+
		"\3\61\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\64\3\64\3\64"+
		"\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\67\3\67\38\38\38"+
		"\38\39\39\39\39\3:\3:\3;\6;\u014b\n;\r;\16;\u014c\3;\3;\3<\6<\u0152\n"+
		"<\r<\16<\u0153\3=\3=\7=\u0158\n=\f=\16=\u015b\13=\3=\3=\3>\3>\3>\3>\7"+
		">\u0163\n>\f>\16>\u0166\13>\3>\3>\3>\3?\3?\7?\u016d\n?\f?\16?\u0170\13"+
		"?\3?\3?\3@\3@\3A\6A\u0177\nA\rA\16A\u0178\3A\3A\7A\u017d\nA\fA\16A\u0180"+
		"\13A\3B\3B\3B\3B\3B\3B\3B\3B\3B\5B\u018b\nB\3C\3C\7C\u018f\nC\fC\16C\u0192"+
		"\13C\3D\3D\7D\u0196\nD\fD\16D\u0199\13D\2\2E\3\3\5\4\7\5\t\6\13\7\r\b"+
		"\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26"+
		"+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S"+
		"+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{?}@\177A\u0081"+
		"B\u0083C\u0085D\u0087E\3\2\7\3\2\"\"\3\2\62;\4\2aac|\6\2\62;C\\aac|\3"+
		"\2C\\\u01a3\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2"+
		"\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
		"\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
		"\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
		"\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
		"\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
		"\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
		"\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2"+
		"\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2"+
		"\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y"+
		"\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3"+
		"\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\3\u0089\3\2\2\2\5\u008d\3\2\2\2"+
		"\7\u0093\3\2\2\2\t\u0096\3\2\2\2\13\u0099\3\2\2\2\r\u009b\3\2\2\2\17\u009f"+
		"\3\2\2\2\21\u00a2\3\2\2\2\23\u00a4\3\2\2\2\25\u00a8\3\2\2\2\27\u00aa\3"+
		"\2\2\2\31\u00ad\3\2\2\2\33\u00b2\3\2\2\2\35\u00b6\3\2\2\2\37\u00b9\3\2"+
		"\2\2!\u00bb\3\2\2\2#\u00be\3\2\2\2%\u00c0\3\2\2\2\'\u00c3\3\2\2\2)\u00c6"+
		"\3\2\2\2+\u00ca\3\2\2\2-\u00d0\3\2\2\2/\u00d9\3\2\2\2\61\u00e0\3\2\2\2"+
		"\63\u00e5\3\2\2\2\65\u00e7\3\2\2\2\67\u00e9\3\2\2\29\u00ec\3\2\2\2;\u00ef"+
		"\3\2\2\2=\u00f2\3\2\2\2?\u00f5\3\2\2\2A\u00f8\3\2\2\2C\u00fa\3\2\2\2E"+
		"\u00fd\3\2\2\2G\u0100\3\2\2\2I\u0103\3\2\2\2K\u0105\3\2\2\2M\u010b\3\2"+
		"\2\2O\u010d\3\2\2\2Q\u010f\3\2\2\2S\u0112\3\2\2\2U\u0115\3\2\2\2W\u0117"+
		"\3\2\2\2Y\u0119\3\2\2\2[\u011b\3\2\2\2]\u0120\3\2\2\2_\u0122\3\2\2\2a"+
		"\u0125\3\2\2\2c\u0128\3\2\2\2e\u012b\3\2\2\2g\u0130\3\2\2\2i\u0136\3\2"+
		"\2\2k\u0139\3\2\2\2m\u013d\3\2\2\2o\u013f\3\2\2\2q\u0143\3\2\2\2s\u0147"+
		"\3\2\2\2u\u014a\3\2\2\2w\u0151\3\2\2\2y\u0155\3\2\2\2{\u015e\3\2\2\2}"+
		"\u016a\3\2\2\2\177\u0173\3\2\2\2\u0081\u0176\3\2\2\2\u0083\u018a\3\2\2"+
		"\2\u0085\u018c\3\2\2\2\u0087\u0193\3\2\2\2\u0089\u008a\7h\2\2\u008a\u008b"+
		"\7w\2\2\u008b\u008c\7p\2\2\u008c\4\3\2\2\2\u008d\u008e\7y\2\2\u008e\u008f"+
		"\7j\2\2\u008f\u0090\7k\2\2\u0090\u0091\7n\2\2\u0091\u0092\7g\2\2\u0092"+
		"\6\3\2\2\2\u0093\u0094\7(\2\2\u0094\u0095\7(\2\2\u0095\b\3\2\2\2\u0096"+
		"\u0097\7<\2\2\u0097\u0098\7<\2\2\u0098\n\3\2\2\2\u0099\u009a\7?\2\2\u009a"+
		"\f\3\2\2\2\u009b\u009c\7h\2\2\u009c\u009d\7q\2\2\u009d\u009e\7t\2\2\u009e"+
		"\16\3\2\2\2\u009f\u00a0\7f\2\2\u00a0\u00a1\7q\2\2\u00a1\20\3\2\2\2\u00a2"+
		"\u00a3\7*\2\2\u00a3\22\3\2\2\2\u00a4\u00a5\7t\2\2\u00a5\u00a6\7g\2\2\u00a6"+
		"\u00a7\7e\2\2\u00a7\24\3\2\2\2\u00a8\u00a9\7.\2\2\u00a9\26\3\2\2\2\u00aa"+
		"\u00ab\7>\2\2\u00ab\u00ac\7/\2\2\u00ac\30\3\2\2\2\u00ad\u00ae\7f\2\2\u00ae"+
		"\u00af\7q\2\2\u00af\u00b0\7p\2\2\u00b0\u00b1\7g\2\2\u00b1\32\3\2\2\2\u00b2"+
		"\u00b3\7o\2\2\u00b3\u00b4\7q\2\2\u00b4\u00b5\7f\2\2\u00b5\34\3\2\2\2\u00b6"+
		"\u00b7\7@\2\2\u00b7\u00b8\7?\2\2\u00b8\36\3\2\2\2\u00b9\u00ba\7>\2\2\u00ba"+
		" \3\2\2\2\u00bb\u00bc\7=\2\2\u00bc\u00bd\7=\2\2\u00bd\"\3\2\2\2\u00be"+
		"\u00bf\7_\2\2\u00bf$\3\2\2\2\u00c0\u00c1\7,\2\2\u00c1\u00c2\7\60\2\2\u00c2"+
		"&\3\2\2\2\u00c3\u00c4\7~\2\2\u00c4\u00c5\7_\2\2\u00c5(\3\2\2\2\u00c6\u00c7"+
		"\7n\2\2\u00c7\u00c8\7g\2\2\u00c8\u00c9\7v\2\2\u00c9*\3\2\2\2\u00ca\u00cb"+
		"\7o\2\2\u00cb\u00cc\7c\2\2\u00cc\u00cd\7v\2\2\u00cd\u00ce\7e\2\2\u00ce"+
		"\u00cf\7j\2\2\u00cf,\3\2\2\2\u00d0\u00d1\7h\2\2\u00d1\u00d2\7w\2\2\u00d2"+
		"\u00d3\7p\2\2\u00d3\u00d4\7e\2\2\u00d4\u00d5\7v\2\2\u00d5\u00d6\7k\2\2"+
		"\u00d6\u00d7\7q\2\2\u00d7\u00d8\7p\2\2\u00d8.\3\2\2\2\u00d9\u00da\7f\2"+
		"\2\u00da\u00db\7q\2\2\u00db\u00dc\7y\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de"+
		"\7v\2\2\u00de\u00df\7q\2\2\u00df\60\3\2\2\2\u00e0\u00e1\7v\2\2\u00e1\u00e2"+
		"\7j\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7p\2\2\u00e4\62\3\2\2\2\u00e5\u00e6"+
		"\7-\2\2\u00e6\64\3\2\2\2\u00e7\u00e8\7\61\2\2\u00e8\66\3\2\2\2\u00e9\u00ea"+
		"\7c\2\2\u00ea\u00eb\7u\2\2\u00eb8\3\2\2\2\u00ec\u00ed\7q\2\2\u00ed\u00ee"+
		"\7h\2\2\u00ee:\3\2\2\2\u00ef\u00f0\7\60\2\2\u00f0\u00f1\7*\2\2\u00f1<"+
		"\3\2\2\2\u00f2\u00f3\7~\2\2\u00f3\u00f4\7~\2\2\u00f4>\3\2\2\2\u00f5\u00f6"+
		"\7\61\2\2\u00f6\u00f7\7\60\2\2\u00f7@\3\2\2\2\u00f8\u00f9\7=\2\2\u00f9"+
		"B\3\2\2\2\u00fa\u00fb\7k\2\2\u00fb\u00fc\7h\2\2\u00fcD\3\2\2\2\u00fd\u00fe"+
		"\7>\2\2\u00fe\u00ff\7?\2\2\u00ffF\3\2\2\2\u0100\u0101\7]\2\2\u0101\u0102"+
		"\7~\2\2\u0102H\3\2\2\2\u0103\u0104\7(\2\2\u0104J\3\2\2\2\u0105\u0106\7"+
		"r\2\2\u0106\u0107\7t\2\2\u0107\u0108\7k\2\2\u0108\u0109\7p\2\2\u0109\u010a"+
		"\7v\2\2\u010aL\3\2\2\2\u010b\u010c\7)\2\2\u010cN\3\2\2\2\u010d\u010e\7"+
		",\2\2\u010eP\3\2\2\2\u010f\u0110\7/\2\2\u0110\u0111\7@\2\2\u0111R\3\2"+
		"\2\2\u0112\u0113\7v\2\2\u0113\u0114\7q\2\2\u0114T\3\2\2\2\u0115\u0116"+
		"\7<\2\2\u0116V\3\2\2\2\u0117\u0118\7]\2\2\u0118X\3\2\2\2\u0119\u011a\7"+
		"~\2\2\u011aZ\3\2\2\2\u011b\u011c\7y\2\2\u011c\u011d\7k\2\2\u011d\u011e"+
		"\7v\2\2\u011e\u011f\7j\2\2\u011f\\\3\2\2\2\u0120\u0121\7@\2\2\u0121^\3"+
		"\2\2\2\u0122\u0123\7-\2\2\u0123\u0124\7\60\2\2\u0124`\3\2\2\2\u0125\u0126"+
		"\7q\2\2\u0126\u0127\7t\2\2\u0127b\3\2\2\2\u0128\u0129\7/\2\2\u0129\u012a"+
		"\7\60\2\2\u012ad\3\2\2\2\u012b\u012c\7g\2\2\u012c\u012d\7n\2\2\u012d\u012e"+
		"\7u\2\2\u012e\u012f\7g\2\2\u012ff\3\2\2\2\u0130\u0131\7d\2\2\u0131\u0132"+
		"\7g\2\2\u0132\u0133\7i\2\2\u0133\u0134\7k\2\2\u0134\u0135\7p\2\2\u0135"+
		"h\3\2\2\2\u0136\u0137\7k\2\2\u0137\u0138\7p\2\2\u0138j\3\2\2\2\u0139\u013a"+
		"\7g\2\2\u013a\u013b\7p\2\2\u013b\u013c\7f\2\2\u013cl\3\2\2\2\u013d\u013e"+
		"\7+\2\2\u013en\3\2\2\2\u013f\u0140\7c\2\2\u0140\u0141\7p\2\2\u0141\u0142"+
		"\7f\2\2\u0142p\3\2\2\2\u0143\u0144\7p\2\2\u0144\u0145\7q\2\2\u0145\u0146"+
		"\7v\2\2\u0146r\3\2\2\2\u0147\u0148\7/\2\2\u0148t\3\2\2\2\u0149\u014b\t"+
		"\2\2\2\u014a\u0149\3\2\2\2\u014b\u014c\3\2\2\2\u014c\u014a\3\2\2\2\u014c"+
		"\u014d\3\2\2\2\u014d\u014e\3\2\2\2\u014e\u014f\b;\2\2\u014fv\3\2\2\2\u0150"+
		"\u0152\t\3\2\2\u0151\u0150\3\2\2\2\u0152\u0153\3\2\2\2\u0153\u0151\3\2"+
		"\2\2\u0153\u0154\3\2\2\2\u0154x\3\2\2\2\u0155\u0159\7*\2\2\u0156\u0158"+
		"\t\2\2\2\u0157\u0156\3\2\2\2\u0158\u015b\3\2\2\2\u0159\u0157\3\2\2\2\u0159"+
		"\u015a\3\2\2\2\u015a\u015c\3\2\2\2\u015b\u0159\3\2\2\2\u015c\u015d\7+"+
		"\2\2\u015dz\3\2\2\2\u015e\u015f\7]\2\2\u015f\u0160\7~\2\2\u0160\u0164"+
		"\3\2\2\2\u0161\u0163\t\2\2\2\u0162\u0161\3\2\2\2\u0163\u0166\3\2\2\2\u0164"+
		"\u0162\3\2\2\2\u0164\u0165\3\2\2\2\u0165\u0167\3\2\2\2\u0166\u0164\3\2"+
		"\2\2\u0167\u0168\7~\2\2\u0168\u0169\7_\2\2\u0169|\3\2\2\2\u016a\u016e"+
		"\7]\2\2\u016b\u016d\t\2\2\2\u016c\u016b\3\2\2\2\u016d\u0170\3\2\2\2\u016e"+
		"\u016c\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u0171\3\2\2\2\u0170\u016e\3\2"+
		"\2\2\u0171\u0172\7_\2\2\u0172~\3\2\2\2\u0173\u0174\7a\2\2\u0174\u0080"+
		"\3\2\2\2\u0175\u0177\t\3\2\2\u0176\u0175\3\2\2\2\u0177\u0178\3\2\2\2\u0178"+
		"\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u017a\3\2\2\2\u017a\u017e\7\60"+
		"\2\2\u017b\u017d\t\3\2\2\u017c\u017b\3\2\2\2\u017d\u0180\3\2\2\2\u017e"+
		"\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0082\3\2\2\2\u0180\u017e\3\2"+
		"\2\2\u0181\u0182\7h\2\2\u0182\u0183\7c\2\2\u0183\u0184\7n\2\2\u0184\u0185"+
		"\7u\2\2\u0185\u018b\7g\2\2\u0186\u0187\7v\2\2\u0187\u0188\7t\2\2\u0188"+
		"\u0189\7w\2\2\u0189\u018b\7g\2\2\u018a\u0181\3\2\2\2\u018a\u0186\3\2\2"+
		"\2\u018b\u0084\3\2\2\2\u018c\u0190\t\4\2\2\u018d\u018f\t\5\2\2\u018e\u018d"+
		"\3\2\2\2\u018f\u0192\3\2\2\2\u0190\u018e\3\2\2\2\u0190\u0191\3\2\2\2\u0191"+
		"\u0086\3\2\2\2\u0192\u0190\3\2\2\2\u0193\u0197\t\6\2\2\u0194\u0196\t\5"+
		"\2\2\u0195\u0194\3\2\2\2\u0196\u0199\3\2\2\2\u0197\u0195\3\2\2\2\u0197"+
		"\u0198\3\2\2\2\u0198\u0088\3\2\2\2\u0199\u0197\3\2\2\2\r\2\u014c\u0153"+
		"\u0159\u0164\u016e\u0178\u017e\u018a\u0190\u0197\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}