// Generated from  by ANTLR 4.2.2

package camllight.parser;
import static camllight.parser.Tokens.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__41=1, T__40=2, T__39=3, T__38=4, T__37=5, T__36=6, T__35=7, T__34=8, 
		T__33=9, T__32=10, T__31=11, T__30=12, T__29=13, T__28=14, T__27=15, T__26=16, 
		T__25=17, T__24=18, T__23=19, T__22=20, T__21=21, T__20=22, T__19=23, 
		T__18=24, T__17=25, T__16=26, T__15=27, T__14=28, T__13=29, T__12=30, 
		T__11=31, T__10=32, T__9=33, T__8=34, T__7=35, T__6=36, T__5=37, T__4=38, 
		T__3=39, T__2=40, T__1=41, T__0=42, WS=43, NULLTOKEN=44, EMPTYLISTTOKEN=45, 
		WILDCARDTOKEN=46, BOOLTOKEN=47, NUMTOKEN=48, IDTOKEN=49;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'as'", "'fun'", "'while'", "'||'", "';'", "'&&'", "'::'", "'='", "'for'", 
		"'if'", "'<='", "'&'", "'print'", "'do'", "'('", "'*'", "','", "'->'", 
		"'done'", "'to'", "':'", "'>='", "'['", "'<'", "'|'", "'with'", "']'", 
		"'>'", "'or'", "'let'", "'match'", "'else'", "'begin'", "'in'", "'function'", 
		"'end'", "')'", "'downto'", "'and'", "'then'", "'+'", "'not'", "WS", "NULLTOKEN", 
		"EMPTYLISTTOKEN", "'_'", "BOOLTOKEN", "NUMTOKEN", "IDTOKEN"
	};
	public static final String[] ruleNames = {
		"T__41", "T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", 
		"T__33", "T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", 
		"T__25", "T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", 
		"T__17", "T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", 
		"T__9", "T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", 
		"T__0", "WS", "NULLTOKEN", "EMPTYLISTTOKEN", "WILDCARDTOKEN", "BOOLTOKEN", 
		"NUMTOKEN", "IDTOKEN"
	};


	public CLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return ""; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\63\u012b\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\3\2\3\2\3\2\3"+
		"\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7"+
		"\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3"+
		"\r\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3"+
		"\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\26\3"+
		"\26\3\27\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\33\3\33\3"+
		"\33\3\34\3\34\3\35\3\35\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3"+
		" \3 \3 \3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3$\3$\3$\3$\3"+
		"$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3"+
		"(\3)\3)\3)\3)\3)\3*\3*\3+\3+\3+\3+\3,\6,\u00fb\n,\r,\16,\u00fc\3,\3,\3"+
		"-\3-\7-\u0103\n-\f-\16-\u0106\13-\3-\3-\3.\3.\7.\u010c\n.\f.\16.\u010f"+
		"\13.\3.\3.\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\3\60\5\60\u011e"+
		"\n\60\3\61\6\61\u0121\n\61\r\61\16\61\u0122\3\62\3\62\7\62\u0127\n\62"+
		"\f\62\16\62\u012a\13\62\2\2\63\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13"+
		"\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61"+
		"\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61"+
		"a\62c\63\3\2\6\3\2\"\"\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\u0130\2\3\3\2"+
		"\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17"+
		"\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2"+
		"\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3"+
		"\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3"+
		"\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"+
		"\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2"+
		"c\3\2\2\2\3e\3\2\2\2\5h\3\2\2\2\7l\3\2\2\2\tr\3\2\2\2\13u\3\2\2\2\rw\3"+
		"\2\2\2\17z\3\2\2\2\21}\3\2\2\2\23\177\3\2\2\2\25\u0083\3\2\2\2\27\u0086"+
		"\3\2\2\2\31\u0089\3\2\2\2\33\u008b\3\2\2\2\35\u0091\3\2\2\2\37\u0094\3"+
		"\2\2\2!\u0096\3\2\2\2#\u0098\3\2\2\2%\u009a\3\2\2\2\'\u009d\3\2\2\2)\u00a2"+
		"\3\2\2\2+\u00a5\3\2\2\2-\u00a7\3\2\2\2/\u00aa\3\2\2\2\61\u00ac\3\2\2\2"+
		"\63\u00ae\3\2\2\2\65\u00b0\3\2\2\2\67\u00b5\3\2\2\29\u00b7\3\2\2\2;\u00b9"+
		"\3\2\2\2=\u00bc\3\2\2\2?\u00c0\3\2\2\2A\u00c6\3\2\2\2C\u00cb\3\2\2\2E"+
		"\u00d1\3\2\2\2G\u00d4\3\2\2\2I\u00dd\3\2\2\2K\u00e1\3\2\2\2M\u00e3\3\2"+
		"\2\2O\u00ea\3\2\2\2Q\u00ee\3\2\2\2S\u00f3\3\2\2\2U\u00f5\3\2\2\2W\u00fa"+
		"\3\2\2\2Y\u0100\3\2\2\2[\u0109\3\2\2\2]\u0112\3\2\2\2_\u011d\3\2\2\2a"+
		"\u0120\3\2\2\2c\u0124\3\2\2\2ef\7c\2\2fg\7u\2\2g\4\3\2\2\2hi\7h\2\2ij"+
		"\7w\2\2jk\7p\2\2k\6\3\2\2\2lm\7y\2\2mn\7j\2\2no\7k\2\2op\7n\2\2pq\7g\2"+
		"\2q\b\3\2\2\2rs\7~\2\2st\7~\2\2t\n\3\2\2\2uv\7=\2\2v\f\3\2\2\2wx\7(\2"+
		"\2xy\7(\2\2y\16\3\2\2\2z{\7<\2\2{|\7<\2\2|\20\3\2\2\2}~\7?\2\2~\22\3\2"+
		"\2\2\177\u0080\7h\2\2\u0080\u0081\7q\2\2\u0081\u0082\7t\2\2\u0082\24\3"+
		"\2\2\2\u0083\u0084\7k\2\2\u0084\u0085\7h\2\2\u0085\26\3\2\2\2\u0086\u0087"+
		"\7>\2\2\u0087\u0088\7?\2\2\u0088\30\3\2\2\2\u0089\u008a\7(\2\2\u008a\32"+
		"\3\2\2\2\u008b\u008c\7r\2\2\u008c\u008d\7t\2\2\u008d\u008e\7k\2\2\u008e"+
		"\u008f\7p\2\2\u008f\u0090\7v\2\2\u0090\34\3\2\2\2\u0091\u0092\7f\2\2\u0092"+
		"\u0093\7q\2\2\u0093\36\3\2\2\2\u0094\u0095\7*\2\2\u0095 \3\2\2\2\u0096"+
		"\u0097\7,\2\2\u0097\"\3\2\2\2\u0098\u0099\7.\2\2\u0099$\3\2\2\2\u009a"+
		"\u009b\7/\2\2\u009b\u009c\7@\2\2\u009c&\3\2\2\2\u009d\u009e\7f\2\2\u009e"+
		"\u009f\7q\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7g\2\2\u00a1(\3\2\2\2\u00a2"+
		"\u00a3\7v\2\2\u00a3\u00a4\7q\2\2\u00a4*\3\2\2\2\u00a5\u00a6\7<\2\2\u00a6"+
		",\3\2\2\2\u00a7\u00a8\7@\2\2\u00a8\u00a9\7?\2\2\u00a9.\3\2\2\2\u00aa\u00ab"+
		"\7]\2\2\u00ab\60\3\2\2\2\u00ac\u00ad\7>\2\2\u00ad\62\3\2\2\2\u00ae\u00af"+
		"\7~\2\2\u00af\64\3\2\2\2\u00b0\u00b1\7y\2\2\u00b1\u00b2\7k\2\2\u00b2\u00b3"+
		"\7v\2\2\u00b3\u00b4\7j\2\2\u00b4\66\3\2\2\2\u00b5\u00b6\7_\2\2\u00b68"+
		"\3\2\2\2\u00b7\u00b8\7@\2\2\u00b8:\3\2\2\2\u00b9\u00ba\7q\2\2\u00ba\u00bb"+
		"\7t\2\2\u00bb<\3\2\2\2\u00bc\u00bd\7n\2\2\u00bd\u00be\7g\2\2\u00be\u00bf"+
		"\7v\2\2\u00bf>\3\2\2\2\u00c0\u00c1\7o\2\2\u00c1\u00c2\7c\2\2\u00c2\u00c3"+
		"\7v\2\2\u00c3\u00c4\7e\2\2\u00c4\u00c5\7j\2\2\u00c5@\3\2\2\2\u00c6\u00c7"+
		"\7g\2\2\u00c7\u00c8\7n\2\2\u00c8\u00c9\7u\2\2\u00c9\u00ca\7g\2\2\u00ca"+
		"B\3\2\2\2\u00cb\u00cc\7d\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce\7i\2\2\u00ce"+
		"\u00cf\7k\2\2\u00cf\u00d0\7p\2\2\u00d0D\3\2\2\2\u00d1\u00d2\7k\2\2\u00d2"+
		"\u00d3\7p\2\2\u00d3F\3\2\2\2\u00d4\u00d5\7h\2\2\u00d5\u00d6\7w\2\2\u00d6"+
		"\u00d7\7p\2\2\u00d7\u00d8\7e\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7k\2\2"+
		"\u00da\u00db\7q\2\2\u00db\u00dc\7p\2\2\u00dcH\3\2\2\2\u00dd\u00de\7g\2"+
		"\2\u00de\u00df\7p\2\2\u00df\u00e0\7f\2\2\u00e0J\3\2\2\2\u00e1\u00e2\7"+
		"+\2\2\u00e2L\3\2\2\2\u00e3\u00e4\7f\2\2\u00e4\u00e5\7q\2\2\u00e5\u00e6"+
		"\7y\2\2\u00e6\u00e7\7p\2\2\u00e7\u00e8\7v\2\2\u00e8\u00e9\7q\2\2\u00e9"+
		"N\3\2\2\2\u00ea\u00eb\7c\2\2\u00eb\u00ec\7p\2\2\u00ec\u00ed\7f\2\2\u00ed"+
		"P\3\2\2\2\u00ee\u00ef\7v\2\2\u00ef\u00f0\7j\2\2\u00f0\u00f1\7g\2\2\u00f1"+
		"\u00f2\7p\2\2\u00f2R\3\2\2\2\u00f3\u00f4\7-\2\2\u00f4T\3\2\2\2\u00f5\u00f6"+
		"\7p\2\2\u00f6\u00f7\7q\2\2\u00f7\u00f8\7v\2\2\u00f8V\3\2\2\2\u00f9\u00fb"+
		"\t\2\2\2\u00fa\u00f9\3\2\2\2\u00fb\u00fc\3\2\2\2\u00fc\u00fa\3\2\2\2\u00fc"+
		"\u00fd\3\2\2\2\u00fd\u00fe\3\2\2\2\u00fe\u00ff\b,\2\2\u00ffX\3\2\2\2\u0100"+
		"\u0104\7*\2\2\u0101\u0103\t\2\2\2\u0102\u0101\3\2\2\2\u0103\u0106\3\2"+
		"\2\2\u0104\u0102\3\2\2\2\u0104\u0105\3\2\2\2\u0105\u0107\3\2\2\2\u0106"+
		"\u0104\3\2\2\2\u0107\u0108\7+\2\2\u0108Z\3\2\2\2\u0109\u010d\7]\2\2\u010a"+
		"\u010c\t\2\2\2\u010b\u010a\3\2\2\2\u010c\u010f\3\2\2\2\u010d\u010b\3\2"+
		"\2\2\u010d\u010e\3\2\2\2\u010e\u0110\3\2\2\2\u010f\u010d\3\2\2\2\u0110"+
		"\u0111\7_\2\2\u0111\\\3\2\2\2\u0112\u0113\7a\2\2\u0113^\3\2\2\2\u0114"+
		"\u0115\7h\2\2\u0115\u0116\7c\2\2\u0116\u0117\7n\2\2\u0117\u0118\7u\2\2"+
		"\u0118\u011e\7g\2\2\u0119\u011a\7v\2\2\u011a\u011b\7t\2\2\u011b\u011c"+
		"\7w\2\2\u011c\u011e\7g\2\2\u011d\u0114\3\2\2\2\u011d\u0119\3\2\2\2\u011e"+
		"`\3\2\2\2\u011f\u0121\t\3\2\2\u0120\u011f\3\2\2\2\u0121\u0122\3\2\2\2"+
		"\u0122\u0120\3\2\2\2\u0122\u0123\3\2\2\2\u0123b\3\2\2\2\u0124\u0128\t"+
		"\4\2\2\u0125\u0127\t\5\2\2\u0126\u0125\3\2\2\2\u0127\u012a\3\2\2\2\u0128"+
		"\u0126\3\2\2\2\u0128\u0129\3\2\2\2\u0129d\3\2\2\2\u012a\u0128\3\2\2\2"+
		"\t\2\u00fc\u0104\u010d\u011d\u0122\u0128\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}