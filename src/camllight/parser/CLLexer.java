// Generated from  by ANTLR 4.2.2

package camllight.parser;
import static camllight.parser.Tokens.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__38=1, T__37=2, T__36=3, T__35=4, T__34=5, T__33=6, T__32=7, T__31=8, 
		T__30=9, T__29=10, T__28=11, T__27=12, T__26=13, T__25=14, T__24=15, T__23=16, 
		T__22=17, T__21=18, T__20=19, T__19=20, T__18=21, T__17=22, T__16=23, 
		T__15=24, T__14=25, T__13=26, T__12=27, T__11=28, T__10=29, T__9=30, T__8=31, 
		T__7=32, T__6=33, T__5=34, T__4=35, T__3=36, T__2=37, T__1=38, T__0=39, 
		WILDCARD=40, WS=41, NUM=42, NOTHING=43, BOOL=44, ID=45;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'as'", "'fun'", "'||'", "';'", "'while'", "'&&'", "'='", "'for'", "'if'", 
		"'<='", "'&'", "'print'", "'do'", "'('", "'*'", "','", "'->'", "'done'", 
		"'to'", "':'", "'>='", "'<'", "'|'", "'with'", "'>'", "'or'", "'let'", 
		"'match'", "'else'", "'begin'", "'in'", "'function'", "'end'", "')'", 
		"'downto'", "'and'", "'+'", "'then'", "'not'", "'_'", "WS", "NUM", "NOTHING", 
		"BOOL", "ID"
	};
	public static final String[] ruleNames = {
		"T__38", "T__37", "T__36", "T__35", "T__34", "T__33", "T__32", "T__31", 
		"T__30", "T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", 
		"T__22", "T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", 
		"T__14", "T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", 
		"T__5", "T__4", "T__3", "T__2", "T__1", "T__0", "WILDCARD", "WS", "NUM", 
		"NOTHING", "BOOL", "ID"
	};


	public CLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return ""; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2/\u0113\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\6\3"+
		"\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\13"+
		"\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3"+
		"\20\3\20\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3"+
		"\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3"+
		"\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3"+
		"\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 "+
		"\3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3$\3$\3$\3$\3$\3"+
		"$\3$\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3)\3)\3*\6*\u00ee"+
		"\n*\r*\16*\u00ef\3*\3*\3+\6+\u00f5\n+\r+\16+\u00f6\3,\3,\7,\u00fb\n,\f"+
		",\16,\u00fe\13,\3,\3,\3-\3-\3-\3-\3-\3-\3-\3-\3-\5-\u010b\n-\3.\3.\7."+
		"\u010f\n.\f.\16.\u0112\13.\2\2/\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23"+
		"\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31"+
		"\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/\3\2"+
		"\6\3\2\"\"\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\u0117\2\3\3\2\2\2\2\5\3\2"+
		"\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\3]\3\2\2\2\5`\3\2\2\2\7d\3\2\2\2\tg\3\2\2\2\13i\3"+
		"\2\2\2\ro\3\2\2\2\17r\3\2\2\2\21t\3\2\2\2\23x\3\2\2\2\25{\3\2\2\2\27~"+
		"\3\2\2\2\31\u0080\3\2\2\2\33\u0086\3\2\2\2\35\u0089\3\2\2\2\37\u008b\3"+
		"\2\2\2!\u008d\3\2\2\2#\u008f\3\2\2\2%\u0092\3\2\2\2\'\u0097\3\2\2\2)\u009a"+
		"\3\2\2\2+\u009c\3\2\2\2-\u009f\3\2\2\2/\u00a1\3\2\2\2\61\u00a3\3\2\2\2"+
		"\63\u00a8\3\2\2\2\65\u00aa\3\2\2\2\67\u00ad\3\2\2\29\u00b1\3\2\2\2;\u00b7"+
		"\3\2\2\2=\u00bc\3\2\2\2?\u00c2\3\2\2\2A\u00c5\3\2\2\2C\u00ce\3\2\2\2E"+
		"\u00d2\3\2\2\2G\u00d4\3\2\2\2I\u00db\3\2\2\2K\u00df\3\2\2\2M\u00e1\3\2"+
		"\2\2O\u00e6\3\2\2\2Q\u00ea\3\2\2\2S\u00ed\3\2\2\2U\u00f4\3\2\2\2W\u00f8"+
		"\3\2\2\2Y\u010a\3\2\2\2[\u010c\3\2\2\2]^\7c\2\2^_\7u\2\2_\4\3\2\2\2`a"+
		"\7h\2\2ab\7w\2\2bc\7p\2\2c\6\3\2\2\2de\7~\2\2ef\7~\2\2f\b\3\2\2\2gh\7"+
		"=\2\2h\n\3\2\2\2ij\7y\2\2jk\7j\2\2kl\7k\2\2lm\7n\2\2mn\7g\2\2n\f\3\2\2"+
		"\2op\7(\2\2pq\7(\2\2q\16\3\2\2\2rs\7?\2\2s\20\3\2\2\2tu\7h\2\2uv\7q\2"+
		"\2vw\7t\2\2w\22\3\2\2\2xy\7k\2\2yz\7h\2\2z\24\3\2\2\2{|\7>\2\2|}\7?\2"+
		"\2}\26\3\2\2\2~\177\7(\2\2\177\30\3\2\2\2\u0080\u0081\7r\2\2\u0081\u0082"+
		"\7t\2\2\u0082\u0083\7k\2\2\u0083\u0084\7p\2\2\u0084\u0085\7v\2\2\u0085"+
		"\32\3\2\2\2\u0086\u0087\7f\2\2\u0087\u0088\7q\2\2\u0088\34\3\2\2\2\u0089"+
		"\u008a\7*\2\2\u008a\36\3\2\2\2\u008b\u008c\7,\2\2\u008c \3\2\2\2\u008d"+
		"\u008e\7.\2\2\u008e\"\3\2\2\2\u008f\u0090\7/\2\2\u0090\u0091\7@\2\2\u0091"+
		"$\3\2\2\2\u0092\u0093\7f\2\2\u0093\u0094\7q\2\2\u0094\u0095\7p\2\2\u0095"+
		"\u0096\7g\2\2\u0096&\3\2\2\2\u0097\u0098\7v\2\2\u0098\u0099\7q\2\2\u0099"+
		"(\3\2\2\2\u009a\u009b\7<\2\2\u009b*\3\2\2\2\u009c\u009d\7@\2\2\u009d\u009e"+
		"\7?\2\2\u009e,\3\2\2\2\u009f\u00a0\7>\2\2\u00a0.\3\2\2\2\u00a1\u00a2\7"+
		"~\2\2\u00a2\60\3\2\2\2\u00a3\u00a4\7y\2\2\u00a4\u00a5\7k\2\2\u00a5\u00a6"+
		"\7v\2\2\u00a6\u00a7\7j\2\2\u00a7\62\3\2\2\2\u00a8\u00a9\7@\2\2\u00a9\64"+
		"\3\2\2\2\u00aa\u00ab\7q\2\2\u00ab\u00ac\7t\2\2\u00ac\66\3\2\2\2\u00ad"+
		"\u00ae\7n\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7v\2\2\u00b08\3\2\2\2\u00b1"+
		"\u00b2\7o\2\2\u00b2\u00b3\7c\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5\7e\2\2"+
		"\u00b5\u00b6\7j\2\2\u00b6:\3\2\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7n\2"+
		"\2\u00b9\u00ba\7u\2\2\u00ba\u00bb\7g\2\2\u00bb<\3\2\2\2\u00bc\u00bd\7"+
		"d\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7i\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1"+
		"\7p\2\2\u00c1>\3\2\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4\7p\2\2\u00c4@\3"+
		"\2\2\2\u00c5\u00c6\7h\2\2\u00c6\u00c7\7w\2\2\u00c7\u00c8\7p\2\2\u00c8"+
		"\u00c9\7e\2\2\u00c9\u00ca\7v\2\2\u00ca\u00cb\7k\2\2\u00cb\u00cc\7q\2\2"+
		"\u00cc\u00cd\7p\2\2\u00cdB\3\2\2\2\u00ce\u00cf\7g\2\2\u00cf\u00d0\7p\2"+
		"\2\u00d0\u00d1\7f\2\2\u00d1D\3\2\2\2\u00d2\u00d3\7+\2\2\u00d3F\3\2\2\2"+
		"\u00d4\u00d5\7f\2\2\u00d5\u00d6\7q\2\2\u00d6\u00d7\7y\2\2\u00d7\u00d8"+
		"\7p\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7q\2\2\u00daH\3\2\2\2\u00db\u00dc"+
		"\7c\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7f\2\2\u00deJ\3\2\2\2\u00df\u00e0"+
		"\7-\2\2\u00e0L\3\2\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7j\2\2\u00e3\u00e4"+
		"\7g\2\2\u00e4\u00e5\7p\2\2\u00e5N\3\2\2\2\u00e6\u00e7\7p\2\2\u00e7\u00e8"+
		"\7q\2\2\u00e8\u00e9\7v\2\2\u00e9P\3\2\2\2\u00ea\u00eb\7a\2\2\u00ebR\3"+
		"\2\2\2\u00ec\u00ee\t\2\2\2\u00ed\u00ec\3\2\2\2\u00ee\u00ef\3\2\2\2\u00ef"+
		"\u00ed\3\2\2\2\u00ef\u00f0\3\2\2\2\u00f0\u00f1\3\2\2\2\u00f1\u00f2\b*"+
		"\2\2\u00f2T\3\2\2\2\u00f3\u00f5\t\3\2\2\u00f4\u00f3\3\2\2\2\u00f5\u00f6"+
		"\3\2\2\2\u00f6\u00f4\3\2\2\2\u00f6\u00f7\3\2\2\2\u00f7V\3\2\2\2\u00f8"+
		"\u00fc\7*\2\2\u00f9\u00fb\t\2\2\2\u00fa\u00f9\3\2\2\2\u00fb\u00fe\3\2"+
		"\2\2\u00fc\u00fa\3\2\2\2\u00fc\u00fd\3\2\2\2\u00fd\u00ff\3\2\2\2\u00fe"+
		"\u00fc\3\2\2\2\u00ff\u0100\7+\2\2\u0100X\3\2\2\2\u0101\u0102\7h\2\2\u0102"+
		"\u0103\7c\2\2\u0103\u0104\7n\2\2\u0104\u0105\7u\2\2\u0105\u010b\7g\2\2"+
		"\u0106\u0107\7v\2\2\u0107\u0108\7t\2\2\u0108\u0109\7w\2\2\u0109\u010b"+
		"\7g\2\2\u010a\u0101\3\2\2\2\u010a\u0106\3\2\2\2\u010bZ\3\2\2\2\u010c\u0110"+
		"\t\4\2\2\u010d\u010f\t\5\2\2\u010e\u010d\3\2\2\2\u010f\u0112\3\2\2\2\u0110"+
		"\u010e\3\2\2\2\u0110\u0111\3\2\2\2\u0111\\\3\2\2\2\u0112\u0110\3\2\2\2"+
		"\b\2\u00ef\u00f6\u00fc\u010a\u0110\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}