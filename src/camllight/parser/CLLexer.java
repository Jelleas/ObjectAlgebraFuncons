// Generated from  by ANTLR 4.2.2

package camllight.parser;
import static camllight.parser.Tokens.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__44=1, T__43=2, T__42=3, T__41=4, T__40=5, T__39=6, T__38=7, T__37=8, 
		T__36=9, T__35=10, T__34=11, T__33=12, T__32=13, T__31=14, T__30=15, T__29=16, 
		T__28=17, T__27=18, T__26=19, T__25=20, T__24=21, T__23=22, T__22=23, 
		T__21=24, T__20=25, T__19=26, T__18=27, T__17=28, T__16=29, T__15=30, 
		T__14=31, T__13=32, T__12=33, T__11=34, T__10=35, T__9=36, T__8=37, T__7=38, 
		T__6=39, T__5=40, T__4=41, T__3=42, T__2=43, T__1=44, T__0=45, WS=46, 
		NULLTOKEN=47, EMPTYLISTTOKEN=48, WILDCARDTOKEN=49, BOOLTOKEN=50, NUMTOKEN=51, 
		IDTOKEN=52, CONSTRTOKEN=53;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'as'", "'of'", "'fun'", "'while'", "'||'", "';'", "'&&'", "'::'", "'='", 
		"'for'", "'if'", "'<='", "'&'", "'print'", "'do'", "'''", "'('", "'*'", 
		"','", "'->'", "'done'", "'to'", "':'", "'>='", "'['", "'<'", "';;'", 
		"'|'", "'with'", "']'", "'>'", "'or'", "'let'", "'match'", "'else'", "'begin'", 
		"'in'", "'function'", "'end'", "')'", "'downto'", "'and'", "'then'", "'+'", 
		"'not'", "WS", "NULLTOKEN", "EMPTYLISTTOKEN", "'_'", "BOOLTOKEN", "NUMTOKEN", 
		"IDTOKEN", "CONSTRTOKEN"
	};
	public static final String[] ruleNames = {
		"T__44", "T__43", "T__42", "T__41", "T__40", "T__39", "T__38", "T__37", 
		"T__36", "T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", 
		"T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", 
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0", "WS", "NULLTOKEN", "EMPTYLISTTOKEN", "WILDCARDTOKEN", 
		"BOOLTOKEN", "NUMTOKEN", "IDTOKEN", "CONSTRTOKEN"
	};


	public CLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return ""; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\67\u0142\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3"+
		"\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\17"+
		"\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24"+
		"\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\31"+
		"\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\36\3\36\3\36"+
		"\3\36\3\36\3\37\3\37\3 \3 \3!\3!\3!\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#"+
		"\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'"+
		"\3\'\3\'\3(\3(\3(\3(\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3"+
		",\3,\3-\3-\3.\3.\3.\3.\3/\6/\u010b\n/\r/\16/\u010c\3/\3/\3\60\3\60\7\60"+
		"\u0113\n\60\f\60\16\60\u0116\13\60\3\60\3\60\3\61\3\61\7\61\u011c\n\61"+
		"\f\61\16\61\u011f\13\61\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3"+
		"\63\3\63\3\63\3\63\5\63\u012e\n\63\3\64\6\64\u0131\n\64\r\64\16\64\u0132"+
		"\3\65\3\65\7\65\u0137\n\65\f\65\16\65\u013a\13\65\3\66\3\66\7\66\u013e"+
		"\n\66\f\66\16\66\u0141\13\66\2\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n"+
		"\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
		"/]\60_\61a\62c\63e\64g\65i\66k\67\3\2\7\3\2\"\"\3\2\62;\5\2C\\aac|\6\2"+
		"\62;C\\aac|\3\2C\\\u0148\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2"+
		"\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3"+
		"\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2"+
		"\2\2k\3\2\2\2\3m\3\2\2\2\5p\3\2\2\2\7s\3\2\2\2\tw\3\2\2\2\13}\3\2\2\2"+
		"\r\u0080\3\2\2\2\17\u0082\3\2\2\2\21\u0085\3\2\2\2\23\u0088\3\2\2\2\25"+
		"\u008a\3\2\2\2\27\u008e\3\2\2\2\31\u0091\3\2\2\2\33\u0094\3\2\2\2\35\u0096"+
		"\3\2\2\2\37\u009c\3\2\2\2!\u009f\3\2\2\2#\u00a1\3\2\2\2%\u00a3\3\2\2\2"+
		"\'\u00a5\3\2\2\2)\u00a7\3\2\2\2+\u00aa\3\2\2\2-\u00af\3\2\2\2/\u00b2\3"+
		"\2\2\2\61\u00b4\3\2\2\2\63\u00b7\3\2\2\2\65\u00b9\3\2\2\2\67\u00bb\3\2"+
		"\2\29\u00be\3\2\2\2;\u00c0\3\2\2\2=\u00c5\3\2\2\2?\u00c7\3\2\2\2A\u00c9"+
		"\3\2\2\2C\u00cc\3\2\2\2E\u00d0\3\2\2\2G\u00d6\3\2\2\2I\u00db\3\2\2\2K"+
		"\u00e1\3\2\2\2M\u00e4\3\2\2\2O\u00ed\3\2\2\2Q\u00f1\3\2\2\2S\u00f3\3\2"+
		"\2\2U\u00fa\3\2\2\2W\u00fe\3\2\2\2Y\u0103\3\2\2\2[\u0105\3\2\2\2]\u010a"+
		"\3\2\2\2_\u0110\3\2\2\2a\u0119\3\2\2\2c\u0122\3\2\2\2e\u012d\3\2\2\2g"+
		"\u0130\3\2\2\2i\u0134\3\2\2\2k\u013b\3\2\2\2mn\7c\2\2no\7u\2\2o\4\3\2"+
		"\2\2pq\7q\2\2qr\7h\2\2r\6\3\2\2\2st\7h\2\2tu\7w\2\2uv\7p\2\2v\b\3\2\2"+
		"\2wx\7y\2\2xy\7j\2\2yz\7k\2\2z{\7n\2\2{|\7g\2\2|\n\3\2\2\2}~\7~\2\2~\177"+
		"\7~\2\2\177\f\3\2\2\2\u0080\u0081\7=\2\2\u0081\16\3\2\2\2\u0082\u0083"+
		"\7(\2\2\u0083\u0084\7(\2\2\u0084\20\3\2\2\2\u0085\u0086\7<\2\2\u0086\u0087"+
		"\7<\2\2\u0087\22\3\2\2\2\u0088\u0089\7?\2\2\u0089\24\3\2\2\2\u008a\u008b"+
		"\7h\2\2\u008b\u008c\7q\2\2\u008c\u008d\7t\2\2\u008d\26\3\2\2\2\u008e\u008f"+
		"\7k\2\2\u008f\u0090\7h\2\2\u0090\30\3\2\2\2\u0091\u0092\7>\2\2\u0092\u0093"+
		"\7?\2\2\u0093\32\3\2\2\2\u0094\u0095\7(\2\2\u0095\34\3\2\2\2\u0096\u0097"+
		"\7r\2\2\u0097\u0098\7t\2\2\u0098\u0099\7k\2\2\u0099\u009a\7p\2\2\u009a"+
		"\u009b\7v\2\2\u009b\36\3\2\2\2\u009c\u009d\7f\2\2\u009d\u009e\7q\2\2\u009e"+
		" \3\2\2\2\u009f\u00a0\7)\2\2\u00a0\"\3\2\2\2\u00a1\u00a2\7*\2\2\u00a2"+
		"$\3\2\2\2\u00a3\u00a4\7,\2\2\u00a4&\3\2\2\2\u00a5\u00a6\7.\2\2\u00a6("+
		"\3\2\2\2\u00a7\u00a8\7/\2\2\u00a8\u00a9\7@\2\2\u00a9*\3\2\2\2\u00aa\u00ab"+
		"\7f\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7p\2\2\u00ad\u00ae\7g\2\2\u00ae"+
		",\3\2\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1\7q\2\2\u00b1.\3\2\2\2\u00b2\u00b3"+
		"\7<\2\2\u00b3\60\3\2\2\2\u00b4\u00b5\7@\2\2\u00b5\u00b6\7?\2\2\u00b6\62"+
		"\3\2\2\2\u00b7\u00b8\7]\2\2\u00b8\64\3\2\2\2\u00b9\u00ba\7>\2\2\u00ba"+
		"\66\3\2\2\2\u00bb\u00bc\7=\2\2\u00bc\u00bd\7=\2\2\u00bd8\3\2\2\2\u00be"+
		"\u00bf\7~\2\2\u00bf:\3\2\2\2\u00c0\u00c1\7y\2\2\u00c1\u00c2\7k\2\2\u00c2"+
		"\u00c3\7v\2\2\u00c3\u00c4\7j\2\2\u00c4<\3\2\2\2\u00c5\u00c6\7_\2\2\u00c6"+
		">\3\2\2\2\u00c7\u00c8\7@\2\2\u00c8@\3\2\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cb"+
		"\7t\2\2\u00cbB\3\2\2\2\u00cc\u00cd\7n\2\2\u00cd\u00ce\7g\2\2\u00ce\u00cf"+
		"\7v\2\2\u00cfD\3\2\2\2\u00d0\u00d1\7o\2\2\u00d1\u00d2\7c\2\2\u00d2\u00d3"+
		"\7v\2\2\u00d3\u00d4\7e\2\2\u00d4\u00d5\7j\2\2\u00d5F\3\2\2\2\u00d6\u00d7"+
		"\7g\2\2\u00d7\u00d8\7n\2\2\u00d8\u00d9\7u\2\2\u00d9\u00da\7g\2\2\u00da"+
		"H\3\2\2\2\u00db\u00dc\7d\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7i\2\2\u00de"+
		"\u00df\7k\2\2\u00df\u00e0\7p\2\2\u00e0J\3\2\2\2\u00e1\u00e2\7k\2\2\u00e2"+
		"\u00e3\7p\2\2\u00e3L\3\2\2\2\u00e4\u00e5\7h\2\2\u00e5\u00e6\7w\2\2\u00e6"+
		"\u00e7\7p\2\2\u00e7\u00e8\7e\2\2\u00e8\u00e9\7v\2\2\u00e9\u00ea\7k\2\2"+
		"\u00ea\u00eb\7q\2\2\u00eb\u00ec\7p\2\2\u00ecN\3\2\2\2\u00ed\u00ee\7g\2"+
		"\2\u00ee\u00ef\7p\2\2\u00ef\u00f0\7f\2\2\u00f0P\3\2\2\2\u00f1\u00f2\7"+
		"+\2\2\u00f2R\3\2\2\2\u00f3\u00f4\7f\2\2\u00f4\u00f5\7q\2\2\u00f5\u00f6"+
		"\7y\2\2\u00f6\u00f7\7p\2\2\u00f7\u00f8\7v\2\2\u00f8\u00f9\7q\2\2\u00f9"+
		"T\3\2\2\2\u00fa\u00fb\7c\2\2\u00fb\u00fc\7p\2\2\u00fc\u00fd\7f\2\2\u00fd"+
		"V\3\2\2\2\u00fe\u00ff\7v\2\2\u00ff\u0100\7j\2\2\u0100\u0101\7g\2\2\u0101"+
		"\u0102\7p\2\2\u0102X\3\2\2\2\u0103\u0104\7-\2\2\u0104Z\3\2\2\2\u0105\u0106"+
		"\7p\2\2\u0106\u0107\7q\2\2\u0107\u0108\7v\2\2\u0108\\\3\2\2\2\u0109\u010b"+
		"\t\2\2\2\u010a\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010c\u010a\3\2\2\2\u010c"+
		"\u010d\3\2\2\2\u010d\u010e\3\2\2\2\u010e\u010f\b/\2\2\u010f^\3\2\2\2\u0110"+
		"\u0114\7*\2\2\u0111\u0113\t\2\2\2\u0112\u0111\3\2\2\2\u0113\u0116\3\2"+
		"\2\2\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115\u0117\3\2\2\2\u0116"+
		"\u0114\3\2\2\2\u0117\u0118\7+\2\2\u0118`\3\2\2\2\u0119\u011d\7]\2\2\u011a"+
		"\u011c\t\2\2\2\u011b\u011a\3\2\2\2\u011c\u011f\3\2\2\2\u011d\u011b\3\2"+
		"\2\2\u011d\u011e\3\2\2\2\u011e\u0120\3\2\2\2\u011f\u011d\3\2\2\2\u0120"+
		"\u0121\7_\2\2\u0121b\3\2\2\2\u0122\u0123\7a\2\2\u0123d\3\2\2\2\u0124\u0125"+
		"\7h\2\2\u0125\u0126\7c\2\2\u0126\u0127\7n\2\2\u0127\u0128\7u\2\2\u0128"+
		"\u012e\7g\2\2\u0129\u012a\7v\2\2\u012a\u012b\7t\2\2\u012b\u012c\7w\2\2"+
		"\u012c\u012e\7g\2\2\u012d\u0124\3\2\2\2\u012d\u0129\3\2\2\2\u012ef\3\2"+
		"\2\2\u012f\u0131\t\3\2\2\u0130\u012f\3\2\2\2\u0131\u0132\3\2\2\2\u0132"+
		"\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133h\3\2\2\2\u0134\u0138\t\4\2\2"+
		"\u0135\u0137\t\5\2\2\u0136\u0135\3\2\2\2\u0137\u013a\3\2\2\2\u0138\u0136"+
		"\3\2\2\2\u0138\u0139\3\2\2\2\u0139j\3\2\2\2\u013a\u0138\3\2\2\2\u013b"+
		"\u013f\t\6\2\2\u013c\u013e\t\5\2\2\u013d\u013c\3\2\2\2\u013e\u0141\3\2"+
		"\2\2\u013f\u013d\3\2\2\2\u013f\u0140\3\2\2\2\u0140l\3\2\2\2\u0141\u013f"+
		"\3\2\2\2\n\2\u010c\u0114\u011d\u012d\u0132\u0138\u013f\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}