// Generated from  by ANTLR 4.2.2

package camllight.parser;
import static camllight.parser.Tokens.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__45=1, T__44=2, T__43=3, T__42=4, T__41=5, T__40=6, T__39=7, T__38=8, 
		T__37=9, T__36=10, T__35=11, T__34=12, T__33=13, T__32=14, T__31=15, T__30=16, 
		T__29=17, T__28=18, T__27=19, T__26=20, T__25=21, T__24=22, T__23=23, 
		T__22=24, T__21=25, T__20=26, T__19=27, T__18=28, T__17=29, T__16=30, 
		T__15=31, T__14=32, T__13=33, T__12=34, T__11=35, T__10=36, T__9=37, T__8=38, 
		T__7=39, T__6=40, T__5=41, T__4=42, T__3=43, T__2=44, T__1=45, T__0=46, 
		WS=47, NULLTOKEN=48, EMPTYLISTTOKEN=49, WILDCARDTOKEN=50, BOOLTOKEN=51, 
		NUMTOKEN=52, IDTOKEN=53, CONSTRTOKEN=54;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'as'", "'of'", "'fun'", "'while'", "'||'", "';'", "'&&'", "'::'", "'='", 
		"'for'", "'if'", "'<='", "'&'", "'print'", "'do'", "'''", "'('", "'*'", 
		"'rec'", "','", "'->'", "'done'", "'to'", "':'", "'>='", "'['", "'<'", 
		"';;'", "'|'", "'with'", "']'", "'>'", "'or'", "'let'", "'match'", "'else'", 
		"'begin'", "'in'", "'function'", "'end'", "')'", "'downto'", "'and'", 
		"'then'", "'+'", "'not'", "WS", "NULLTOKEN", "EMPTYLISTTOKEN", "'_'", 
		"BOOLTOKEN", "NUMTOKEN", "IDTOKEN", "CONSTRTOKEN"
	};
	public static final String[] ruleNames = {
		"T__45", "T__44", "T__43", "T__42", "T__41", "T__40", "T__39", "T__38", 
		"T__37", "T__36", "T__35", "T__34", "T__33", "T__32", "T__31", "T__30", 
		"T__29", "T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", 
		"T__21", "T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", 
		"T__13", "T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", 
		"T__4", "T__3", "T__2", "T__1", "T__0", "WS", "NULLTOKEN", "EMPTYLISTTOKEN", 
		"WILDCARDTOKEN", "BOOLTOKEN", "NUMTOKEN", "IDTOKEN", "CONSTRTOKEN"
	};


	public CLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return ""; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\28\u0148\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\3\2\3\2\3\2\3\3\3\3\3\3\3\4\3\4\3\4"+
		"\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\17"+
		"\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27"+
		"\3\30\3\30\3\30\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\35\3\35"+
		"\3\35\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3\"\3#\3"+
		"#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'"+
		"\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,"+
		"\3,\3,\3,\3-\3-\3-\3-\3-\3.\3.\3/\3/\3/\3/\3\60\6\60\u0111\n\60\r\60\16"+
		"\60\u0112\3\60\3\60\3\61\3\61\7\61\u0119\n\61\f\61\16\61\u011c\13\61\3"+
		"\61\3\61\3\62\3\62\7\62\u0122\n\62\f\62\16\62\u0125\13\62\3\62\3\62\3"+
		"\63\3\63\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\3\64\5\64\u0134\n\64"+
		"\3\65\6\65\u0137\n\65\r\65\16\65\u0138\3\66\3\66\7\66\u013d\n\66\f\66"+
		"\16\66\u0140\13\66\3\67\3\67\7\67\u0144\n\67\f\67\16\67\u0147\13\67\2"+
		"\28\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36"+
		";\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67"+
		"m8\3\2\7\3\2\"\"\3\2\62;\5\2C\\aac|\6\2\62;C\\aac|\3\2C\\\u014e\2\3\3"+
		"\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2"+
		"\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3"+
		"\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2"+
		"%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61"+
		"\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2"+
		"\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I"+
		"\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2"+
		"\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2"+
		"\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\3o"+
		"\3\2\2\2\5r\3\2\2\2\7u\3\2\2\2\ty\3\2\2\2\13\177\3\2\2\2\r\u0082\3\2\2"+
		"\2\17\u0084\3\2\2\2\21\u0087\3\2\2\2\23\u008a\3\2\2\2\25\u008c\3\2\2\2"+
		"\27\u0090\3\2\2\2\31\u0093\3\2\2\2\33\u0096\3\2\2\2\35\u0098\3\2\2\2\37"+
		"\u009e\3\2\2\2!\u00a1\3\2\2\2#\u00a3\3\2\2\2%\u00a5\3\2\2\2\'\u00a7\3"+
		"\2\2\2)\u00ab\3\2\2\2+\u00ad\3\2\2\2-\u00b0\3\2\2\2/\u00b5\3\2\2\2\61"+
		"\u00b8\3\2\2\2\63\u00ba\3\2\2\2\65\u00bd\3\2\2\2\67\u00bf\3\2\2\29\u00c1"+
		"\3\2\2\2;\u00c4\3\2\2\2=\u00c6\3\2\2\2?\u00cb\3\2\2\2A\u00cd\3\2\2\2C"+
		"\u00cf\3\2\2\2E\u00d2\3\2\2\2G\u00d6\3\2\2\2I\u00dc\3\2\2\2K\u00e1\3\2"+
		"\2\2M\u00e7\3\2\2\2O\u00ea\3\2\2\2Q\u00f3\3\2\2\2S\u00f7\3\2\2\2U\u00f9"+
		"\3\2\2\2W\u0100\3\2\2\2Y\u0104\3\2\2\2[\u0109\3\2\2\2]\u010b\3\2\2\2_"+
		"\u0110\3\2\2\2a\u0116\3\2\2\2c\u011f\3\2\2\2e\u0128\3\2\2\2g\u0133\3\2"+
		"\2\2i\u0136\3\2\2\2k\u013a\3\2\2\2m\u0141\3\2\2\2op\7c\2\2pq\7u\2\2q\4"+
		"\3\2\2\2rs\7q\2\2st\7h\2\2t\6\3\2\2\2uv\7h\2\2vw\7w\2\2wx\7p\2\2x\b\3"+
		"\2\2\2yz\7y\2\2z{\7j\2\2{|\7k\2\2|}\7n\2\2}~\7g\2\2~\n\3\2\2\2\177\u0080"+
		"\7~\2\2\u0080\u0081\7~\2\2\u0081\f\3\2\2\2\u0082\u0083\7=\2\2\u0083\16"+
		"\3\2\2\2\u0084\u0085\7(\2\2\u0085\u0086\7(\2\2\u0086\20\3\2\2\2\u0087"+
		"\u0088\7<\2\2\u0088\u0089\7<\2\2\u0089\22\3\2\2\2\u008a\u008b\7?\2\2\u008b"+
		"\24\3\2\2\2\u008c\u008d\7h\2\2\u008d\u008e\7q\2\2\u008e\u008f\7t\2\2\u008f"+
		"\26\3\2\2\2\u0090\u0091\7k\2\2\u0091\u0092\7h\2\2\u0092\30\3\2\2\2\u0093"+
		"\u0094\7>\2\2\u0094\u0095\7?\2\2\u0095\32\3\2\2\2\u0096\u0097\7(\2\2\u0097"+
		"\34\3\2\2\2\u0098\u0099\7r\2\2\u0099\u009a\7t\2\2\u009a\u009b\7k\2\2\u009b"+
		"\u009c\7p\2\2\u009c\u009d\7v\2\2\u009d\36\3\2\2\2\u009e\u009f\7f\2\2\u009f"+
		"\u00a0\7q\2\2\u00a0 \3\2\2\2\u00a1\u00a2\7)\2\2\u00a2\"\3\2\2\2\u00a3"+
		"\u00a4\7*\2\2\u00a4$\3\2\2\2\u00a5\u00a6\7,\2\2\u00a6&\3\2\2\2\u00a7\u00a8"+
		"\7t\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7e\2\2\u00aa(\3\2\2\2\u00ab\u00ac"+
		"\7.\2\2\u00ac*\3\2\2\2\u00ad\u00ae\7/\2\2\u00ae\u00af\7@\2\2\u00af,\3"+
		"\2\2\2\u00b0\u00b1\7f\2\2\u00b1\u00b2\7q\2\2\u00b2\u00b3\7p\2\2\u00b3"+
		"\u00b4\7g\2\2\u00b4.\3\2\2\2\u00b5\u00b6\7v\2\2\u00b6\u00b7\7q\2\2\u00b7"+
		"\60\3\2\2\2\u00b8\u00b9\7<\2\2\u00b9\62\3\2\2\2\u00ba\u00bb\7@\2\2\u00bb"+
		"\u00bc\7?\2\2\u00bc\64\3\2\2\2\u00bd\u00be\7]\2\2\u00be\66\3\2\2\2\u00bf"+
		"\u00c0\7>\2\2\u00c08\3\2\2\2\u00c1\u00c2\7=\2\2\u00c2\u00c3\7=\2\2\u00c3"+
		":\3\2\2\2\u00c4\u00c5\7~\2\2\u00c5<\3\2\2\2\u00c6\u00c7\7y\2\2\u00c7\u00c8"+
		"\7k\2\2\u00c8\u00c9\7v\2\2\u00c9\u00ca\7j\2\2\u00ca>\3\2\2\2\u00cb\u00cc"+
		"\7_\2\2\u00cc@\3\2\2\2\u00cd\u00ce\7@\2\2\u00ceB\3\2\2\2\u00cf\u00d0\7"+
		"q\2\2\u00d0\u00d1\7t\2\2\u00d1D\3\2\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4"+
		"\7g\2\2\u00d4\u00d5\7v\2\2\u00d5F\3\2\2\2\u00d6\u00d7\7o\2\2\u00d7\u00d8"+
		"\7c\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7e\2\2\u00da\u00db\7j\2\2\u00db"+
		"H\3\2\2\2\u00dc\u00dd\7g\2\2\u00dd\u00de\7n\2\2\u00de\u00df\7u\2\2\u00df"+
		"\u00e0\7g\2\2\u00e0J\3\2\2\2\u00e1\u00e2\7d\2\2\u00e2\u00e3\7g\2\2\u00e3"+
		"\u00e4\7i\2\2\u00e4\u00e5\7k\2\2\u00e5\u00e6\7p\2\2\u00e6L\3\2\2\2\u00e7"+
		"\u00e8\7k\2\2\u00e8\u00e9\7p\2\2\u00e9N\3\2\2\2\u00ea\u00eb\7h\2\2\u00eb"+
		"\u00ec\7w\2\2\u00ec\u00ed\7p\2\2\u00ed\u00ee\7e\2\2\u00ee\u00ef\7v\2\2"+
		"\u00ef\u00f0\7k\2\2\u00f0\u00f1\7q\2\2\u00f1\u00f2\7p\2\2\u00f2P\3\2\2"+
		"\2\u00f3\u00f4\7g\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7f\2\2\u00f6R\3\2"+
		"\2\2\u00f7\u00f8\7+\2\2\u00f8T\3\2\2\2\u00f9\u00fa\7f\2\2\u00fa\u00fb"+
		"\7q\2\2\u00fb\u00fc\7y\2\2\u00fc\u00fd\7p\2\2\u00fd\u00fe\7v\2\2\u00fe"+
		"\u00ff\7q\2\2\u00ffV\3\2\2\2\u0100\u0101\7c\2\2\u0101\u0102\7p\2\2\u0102"+
		"\u0103\7f\2\2\u0103X\3\2\2\2\u0104\u0105\7v\2\2\u0105\u0106\7j\2\2\u0106"+
		"\u0107\7g\2\2\u0107\u0108\7p\2\2\u0108Z\3\2\2\2\u0109\u010a\7-\2\2\u010a"+
		"\\\3\2\2\2\u010b\u010c\7p\2\2\u010c\u010d\7q\2\2\u010d\u010e\7v\2\2\u010e"+
		"^\3\2\2\2\u010f\u0111\t\2\2\2\u0110\u010f\3\2\2\2\u0111\u0112\3\2\2\2"+
		"\u0112\u0110\3\2\2\2\u0112\u0113\3\2\2\2\u0113\u0114\3\2\2\2\u0114\u0115"+
		"\b\60\2\2\u0115`\3\2\2\2\u0116\u011a\7*\2\2\u0117\u0119\t\2\2\2\u0118"+
		"\u0117\3\2\2\2\u0119\u011c\3\2\2\2\u011a\u0118\3\2\2\2\u011a\u011b\3\2"+
		"\2\2\u011b\u011d\3\2\2\2\u011c\u011a\3\2\2\2\u011d\u011e\7+\2\2\u011e"+
		"b\3\2\2\2\u011f\u0123\7]\2\2\u0120\u0122\t\2\2\2\u0121\u0120\3\2\2\2\u0122"+
		"\u0125\3\2\2\2\u0123\u0121\3\2\2\2\u0123\u0124\3\2\2\2\u0124\u0126\3\2"+
		"\2\2\u0125\u0123\3\2\2\2\u0126\u0127\7_\2\2\u0127d\3\2\2\2\u0128\u0129"+
		"\7a\2\2\u0129f\3\2\2\2\u012a\u012b\7h\2\2\u012b\u012c\7c\2\2\u012c\u012d"+
		"\7n\2\2\u012d\u012e\7u\2\2\u012e\u0134\7g\2\2\u012f\u0130\7v\2\2\u0130"+
		"\u0131\7t\2\2\u0131\u0132\7w\2\2\u0132\u0134\7g\2\2\u0133\u012a\3\2\2"+
		"\2\u0133\u012f\3\2\2\2\u0134h\3\2\2\2\u0135\u0137\t\3\2\2\u0136\u0135"+
		"\3\2\2\2\u0137\u0138\3\2\2\2\u0138\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139"+
		"j\3\2\2\2\u013a\u013e\t\4\2\2\u013b\u013d\t\5\2\2\u013c\u013b\3\2\2\2"+
		"\u013d\u0140\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013fl\3"+
		"\2\2\2\u0140\u013e\3\2\2\2\u0141\u0145\t\6\2\2\u0142\u0144\t\5\2\2\u0143"+
		"\u0142\3\2\2\2\u0144\u0147\3\2\2\2\u0145\u0143\3\2\2\2\u0145\u0146\3\2"+
		"\2\2\u0146n\3\2\2\2\u0147\u0145\3\2\2\2\n\2\u0112\u011a\u0123\u0133\u0138"+
		"\u013e\u0145\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}