// Generated from  by ANTLR 4.2.2

package camllight.parser;
import static camllight.parser.Tokens.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class CLLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__52=1, T__51=2, T__50=3, T__49=4, T__48=5, T__47=6, T__46=7, T__45=8, 
		T__44=9, T__43=10, T__42=11, T__41=12, T__40=13, T__39=14, T__38=15, T__37=16, 
		T__36=17, T__35=18, T__34=19, T__33=20, T__32=21, T__31=22, T__30=23, 
		T__29=24, T__28=25, T__27=26, T__26=27, T__25=28, T__24=29, T__23=30, 
		T__22=31, T__21=32, T__20=33, T__19=34, T__18=35, T__17=36, T__16=37, 
		T__15=38, T__14=39, T__13=40, T__12=41, T__11=42, T__10=43, T__9=44, T__8=45, 
		T__7=46, T__6=47, T__5=48, T__4=49, T__3=50, T__2=51, T__1=52, T__0=53, 
		WS=54, NULLTOKEN=55, EMPTYARRAYTOKEN=56, EMPTYLISTTOKEN=57, WILDCARDTOKEN=58, 
		BOOLTOKEN=59, NUMTOKEN=60, IDTOKEN=61, CONSTRTOKEN=62;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'fun'", "'while'", "'&&'", "'::'", "'='", "'for'", "'do'", "'('", "'rec'", 
		"','", "'<-'", "'done'", "'mod'", "'>='", "'<'", "';;'", "']'", "'|]'", 
		"'let'", "'match'", "'function'", "'downto'", "'then'", "'+'", "'/'", 
		"'as'", "'of'", "'.('", "'||'", "';'", "'if'", "'<='", "'[|'", "'&'", 
		"'print'", "'''", "'*'", "'->'", "'to'", "':'", "'['", "'|'", "'with'", 
		"'>'", "'or'", "'else'", "'begin'", "'in'", "'end'", "')'", "'and'", "'not'", 
		"'-'", "WS", "NULLTOKEN", "EMPTYARRAYTOKEN", "EMPTYLISTTOKEN", "'_'", 
		"BOOLTOKEN", "NUMTOKEN", "IDTOKEN", "CONSTRTOKEN"
	};
	public static final String[] ruleNames = {
		"T__52", "T__51", "T__50", "T__49", "T__48", "T__47", "T__46", "T__45", 
		"T__44", "T__43", "T__42", "T__41", "T__40", "T__39", "T__38", "T__37", 
		"T__36", "T__35", "T__34", "T__33", "T__32", "T__31", "T__30", "T__29", 
		"T__28", "T__27", "T__26", "T__25", "T__24", "T__23", "T__22", "T__21", 
		"T__20", "T__19", "T__18", "T__17", "T__16", "T__15", "T__14", "T__13", 
		"T__12", "T__11", "T__10", "T__9", "T__8", "T__7", "T__6", "T__5", "T__4", 
		"T__3", "T__2", "T__1", "T__0", "WS", "NULLTOKEN", "EMPTYARRAYTOKEN", 
		"EMPTYLISTTOKEN", "WILDCARDTOKEN", "BOOLTOKEN", "NUMTOKEN", "IDTOKEN", 
		"CONSTRTOKEN"
	};


	public CLLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return ""; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2@\u0178\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\3\2\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\5\3"+
		"\5\3\5\3\6\3\6\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\13"+
		"\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3"+
		"\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3"+
		"\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3"+
		"\31\3\31\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3"+
		"\36\3\36\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3$\3$\3$"+
		"\3$\3%\3%\3&\3&\3\'\3\'\3\'\3(\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3,\3,\3,"+
		"\3-\3-\3.\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61"+
		"\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65"+
		"\3\65\3\66\3\66\3\67\6\67\u0135\n\67\r\67\16\67\u0136\3\67\3\67\38\38"+
		"\78\u013d\n8\f8\168\u0140\138\38\38\39\39\39\39\79\u0148\n9\f9\169\u014b"+
		"\139\39\39\39\3:\3:\7:\u0152\n:\f:\16:\u0155\13:\3:\3:\3;\3;\3<\3<\3<"+
		"\3<\3<\3<\3<\3<\3<\5<\u0164\n<\3=\6=\u0167\n=\r=\16=\u0168\3>\3>\7>\u016d"+
		"\n>\f>\16>\u0170\13>\3?\3?\7?\u0174\n?\f?\16?\u0177\13?\2\2@\3\3\5\4\7"+
		"\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w"+
		"=y>{?}@\3\2\7\3\2\"\"\3\2\62;\4\2aac|\6\2\62;C\\aac|\3\2C\\\u017f\2\3"+
		"\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2"+
		"\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31"+
		"\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2"+
		"\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2"+
		"\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2"+
		"\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2"+
		"I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3"+
		"\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2"+
		"\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2"+
		"o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3"+
		"\2\2\2\2}\3\2\2\2\3\177\3\2\2\2\5\u0083\3\2\2\2\7\u0089\3\2\2\2\t\u008c"+
		"\3\2\2\2\13\u008f\3\2\2\2\r\u0091\3\2\2\2\17\u0095\3\2\2\2\21\u0098\3"+
		"\2\2\2\23\u009a\3\2\2\2\25\u009e\3\2\2\2\27\u00a0\3\2\2\2\31\u00a3\3\2"+
		"\2\2\33\u00a8\3\2\2\2\35\u00ac\3\2\2\2\37\u00af\3\2\2\2!\u00b1\3\2\2\2"+
		"#\u00b4\3\2\2\2%\u00b6\3\2\2\2\'\u00b9\3\2\2\2)\u00bd\3\2\2\2+\u00c3\3"+
		"\2\2\2-\u00cc\3\2\2\2/\u00d3\3\2\2\2\61\u00d8\3\2\2\2\63\u00da\3\2\2\2"+
		"\65\u00dc\3\2\2\2\67\u00df\3\2\2\29\u00e2\3\2\2\2;\u00e5\3\2\2\2=\u00e8"+
		"\3\2\2\2?\u00ea\3\2\2\2A\u00ed\3\2\2\2C\u00f0\3\2\2\2E\u00f3\3\2\2\2G"+
		"\u00f5\3\2\2\2I\u00fb\3\2\2\2K\u00fd\3\2\2\2M\u00ff\3\2\2\2O\u0102\3\2"+
		"\2\2Q\u0105\3\2\2\2S\u0107\3\2\2\2U\u0109\3\2\2\2W\u010b\3\2\2\2Y\u0110"+
		"\3\2\2\2[\u0112\3\2\2\2]\u0115\3\2\2\2_\u011a\3\2\2\2a\u0120\3\2\2\2c"+
		"\u0123\3\2\2\2e\u0127\3\2\2\2g\u0129\3\2\2\2i\u012d\3\2\2\2k\u0131\3\2"+
		"\2\2m\u0134\3\2\2\2o\u013a\3\2\2\2q\u0143\3\2\2\2s\u014f\3\2\2\2u\u0158"+
		"\3\2\2\2w\u0163\3\2\2\2y\u0166\3\2\2\2{\u016a\3\2\2\2}\u0171\3\2\2\2\177"+
		"\u0080\7h\2\2\u0080\u0081\7w\2\2\u0081\u0082\7p\2\2\u0082\4\3\2\2\2\u0083"+
		"\u0084\7y\2\2\u0084\u0085\7j\2\2\u0085\u0086\7k\2\2\u0086\u0087\7n\2\2"+
		"\u0087\u0088\7g\2\2\u0088\6\3\2\2\2\u0089\u008a\7(\2\2\u008a\u008b\7("+
		"\2\2\u008b\b\3\2\2\2\u008c\u008d\7<\2\2\u008d\u008e\7<\2\2\u008e\n\3\2"+
		"\2\2\u008f\u0090\7?\2\2\u0090\f\3\2\2\2\u0091\u0092\7h\2\2\u0092\u0093"+
		"\7q\2\2\u0093\u0094\7t\2\2\u0094\16\3\2\2\2\u0095\u0096\7f\2\2\u0096\u0097"+
		"\7q\2\2\u0097\20\3\2\2\2\u0098\u0099\7*\2\2\u0099\22\3\2\2\2\u009a\u009b"+
		"\7t\2\2\u009b\u009c\7g\2\2\u009c\u009d\7e\2\2\u009d\24\3\2\2\2\u009e\u009f"+
		"\7.\2\2\u009f\26\3\2\2\2\u00a0\u00a1\7>\2\2\u00a1\u00a2\7/\2\2\u00a2\30"+
		"\3\2\2\2\u00a3\u00a4\7f\2\2\u00a4\u00a5\7q\2\2\u00a5\u00a6\7p\2\2\u00a6"+
		"\u00a7\7g\2\2\u00a7\32\3\2\2\2\u00a8\u00a9\7o\2\2\u00a9\u00aa\7q\2\2\u00aa"+
		"\u00ab\7f\2\2\u00ab\34\3\2\2\2\u00ac\u00ad\7@\2\2\u00ad\u00ae\7?\2\2\u00ae"+
		"\36\3\2\2\2\u00af\u00b0\7>\2\2\u00b0 \3\2\2\2\u00b1\u00b2\7=\2\2\u00b2"+
		"\u00b3\7=\2\2\u00b3\"\3\2\2\2\u00b4\u00b5\7_\2\2\u00b5$\3\2\2\2\u00b6"+
		"\u00b7\7~\2\2\u00b7\u00b8\7_\2\2\u00b8&\3\2\2\2\u00b9\u00ba\7n\2\2\u00ba"+
		"\u00bb\7g\2\2\u00bb\u00bc\7v\2\2\u00bc(\3\2\2\2\u00bd\u00be\7o\2\2\u00be"+
		"\u00bf\7c\2\2\u00bf\u00c0\7v\2\2\u00c0\u00c1\7e\2\2\u00c1\u00c2\7j\2\2"+
		"\u00c2*\3\2\2\2\u00c3\u00c4\7h\2\2\u00c4\u00c5\7w\2\2\u00c5\u00c6\7p\2"+
		"\2\u00c6\u00c7\7e\2\2\u00c7\u00c8\7v\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca"+
		"\7q\2\2\u00ca\u00cb\7p\2\2\u00cb,\3\2\2\2\u00cc\u00cd\7f\2\2\u00cd\u00ce"+
		"\7q\2\2\u00ce\u00cf\7y\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7v\2\2\u00d1"+
		"\u00d2\7q\2\2\u00d2.\3\2\2\2\u00d3\u00d4\7v\2\2\u00d4\u00d5\7j\2\2\u00d5"+
		"\u00d6\7g\2\2\u00d6\u00d7\7p\2\2\u00d7\60\3\2\2\2\u00d8\u00d9\7-\2\2\u00d9"+
		"\62\3\2\2\2\u00da\u00db\7\61\2\2\u00db\64\3\2\2\2\u00dc\u00dd\7c\2\2\u00dd"+
		"\u00de\7u\2\2\u00de\66\3\2\2\2\u00df\u00e0\7q\2\2\u00e0\u00e1\7h\2\2\u00e1"+
		"8\3\2\2\2\u00e2\u00e3\7\60\2\2\u00e3\u00e4\7*\2\2\u00e4:\3\2\2\2\u00e5"+
		"\u00e6\7~\2\2\u00e6\u00e7\7~\2\2\u00e7<\3\2\2\2\u00e8\u00e9\7=\2\2\u00e9"+
		">\3\2\2\2\u00ea\u00eb\7k\2\2\u00eb\u00ec\7h\2\2\u00ec@\3\2\2\2\u00ed\u00ee"+
		"\7>\2\2\u00ee\u00ef\7?\2\2\u00efB\3\2\2\2\u00f0\u00f1\7]\2\2\u00f1\u00f2"+
		"\7~\2\2\u00f2D\3\2\2\2\u00f3\u00f4\7(\2\2\u00f4F\3\2\2\2\u00f5\u00f6\7"+
		"r\2\2\u00f6\u00f7\7t\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7p\2\2\u00f9\u00fa"+
		"\7v\2\2\u00faH\3\2\2\2\u00fb\u00fc\7)\2\2\u00fcJ\3\2\2\2\u00fd\u00fe\7"+
		",\2\2\u00feL\3\2\2\2\u00ff\u0100\7/\2\2\u0100\u0101\7@\2\2\u0101N\3\2"+
		"\2\2\u0102\u0103\7v\2\2\u0103\u0104\7q\2\2\u0104P\3\2\2\2\u0105\u0106"+
		"\7<\2\2\u0106R\3\2\2\2\u0107\u0108\7]\2\2\u0108T\3\2\2\2\u0109\u010a\7"+
		"~\2\2\u010aV\3\2\2\2\u010b\u010c\7y\2\2\u010c\u010d\7k\2\2\u010d\u010e"+
		"\7v\2\2\u010e\u010f\7j\2\2\u010fX\3\2\2\2\u0110\u0111\7@\2\2\u0111Z\3"+
		"\2\2\2\u0112\u0113\7q\2\2\u0113\u0114\7t\2\2\u0114\\\3\2\2\2\u0115\u0116"+
		"\7g\2\2\u0116\u0117\7n\2\2\u0117\u0118\7u\2\2\u0118\u0119\7g\2\2\u0119"+
		"^\3\2\2\2\u011a\u011b\7d\2\2\u011b\u011c\7g\2\2\u011c\u011d\7i\2\2\u011d"+
		"\u011e\7k\2\2\u011e\u011f\7p\2\2\u011f`\3\2\2\2\u0120\u0121\7k\2\2\u0121"+
		"\u0122\7p\2\2\u0122b\3\2\2\2\u0123\u0124\7g\2\2\u0124\u0125\7p\2\2\u0125"+
		"\u0126\7f\2\2\u0126d\3\2\2\2\u0127\u0128\7+\2\2\u0128f\3\2\2\2\u0129\u012a"+
		"\7c\2\2\u012a\u012b\7p\2\2\u012b\u012c\7f\2\2\u012ch\3\2\2\2\u012d\u012e"+
		"\7p\2\2\u012e\u012f\7q\2\2\u012f\u0130\7v\2\2\u0130j\3\2\2\2\u0131\u0132"+
		"\7/\2\2\u0132l\3\2\2\2\u0133\u0135\t\2\2\2\u0134\u0133\3\2\2\2\u0135\u0136"+
		"\3\2\2\2\u0136\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0138\3\2\2\2\u0138"+
		"\u0139\b\67\2\2\u0139n\3\2\2\2\u013a\u013e\7*\2\2\u013b\u013d\t\2\2\2"+
		"\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e\u013c\3\2\2\2\u013e\u013f"+
		"\3\2\2\2\u013f\u0141\3\2\2\2\u0140\u013e\3\2\2\2\u0141\u0142\7+\2\2\u0142"+
		"p\3\2\2\2\u0143\u0144\7]\2\2\u0144\u0145\7~\2\2\u0145\u0149\3\2\2\2\u0146"+
		"\u0148\t\2\2\2\u0147\u0146\3\2\2\2\u0148\u014b\3\2\2\2\u0149\u0147\3\2"+
		"\2\2\u0149\u014a\3\2\2\2\u014a\u014c\3\2\2\2\u014b\u0149\3\2\2\2\u014c"+
		"\u014d\7~\2\2\u014d\u014e\7_\2\2\u014er\3\2\2\2\u014f\u0153\7]\2\2\u0150"+
		"\u0152\t\2\2\2\u0151\u0150\3\2\2\2\u0152\u0155\3\2\2\2\u0153\u0151\3\2"+
		"\2\2\u0153\u0154\3\2\2\2\u0154\u0156\3\2\2\2\u0155\u0153\3\2\2\2\u0156"+
		"\u0157\7_\2\2\u0157t\3\2\2\2\u0158\u0159\7a\2\2\u0159v\3\2\2\2\u015a\u015b"+
		"\7h\2\2\u015b\u015c\7c\2\2\u015c\u015d\7n\2\2\u015d\u015e\7u\2\2\u015e"+
		"\u0164\7g\2\2\u015f\u0160\7v\2\2\u0160\u0161\7t\2\2\u0161\u0162\7w\2\2"+
		"\u0162\u0164\7g\2\2\u0163\u015a\3\2\2\2\u0163\u015f\3\2\2\2\u0164x\3\2"+
		"\2\2\u0165\u0167\t\3\2\2\u0166\u0165\3\2\2\2\u0167\u0168\3\2\2\2\u0168"+
		"\u0166\3\2\2\2\u0168\u0169\3\2\2\2\u0169z\3\2\2\2\u016a\u016e\t\4\2\2"+
		"\u016b\u016d\t\5\2\2\u016c\u016b\3\2\2\2\u016d\u0170\3\2\2\2\u016e\u016c"+
		"\3\2\2\2\u016e\u016f\3\2\2\2\u016f|\3\2\2\2\u0170\u016e\3\2\2\2\u0171"+
		"\u0175\t\6\2\2\u0172\u0174\t\5\2\2\u0173\u0172\3\2\2\2\u0174\u0177\3\2"+
		"\2\2\u0175\u0173\3\2\2\2\u0175\u0176\3\2\2\2\u0176~\3\2\2\2\u0177\u0175"+
		"\3\2\2\2\13\2\u0136\u013e\u0149\u0153\u0163\u0168\u016e\u0175\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}